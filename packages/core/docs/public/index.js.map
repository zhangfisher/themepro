{"version":3,"sources":["../src/observer.ts","../src/presets.ts","../src/utils/generateGradientColors.ts","../src/utils/toRGB.ts","../src/utils/isDark.ts","../src/utils/generateGradientVars.ts","../src/utils/toVarStyles.ts","../src/utils/getVarsStyles.ts","../src/utils/getId.ts","../src/utils/injectStylesheet.ts","../src/utils/toRGBString.ts","../src/vars/base.ts","../src/vars/derived.ts","../src/vars/size.ts","../src/vars/radius.ts","../src/vars/spacing.ts","../src/vars/shadow.ts","../src/themepro.ts","../src/utils/isLight.ts"],"sourcesContent":["/**\r\n *\r\n * 监听DOM元素的指定属性变化，并执行回调函数\r\n *\r\n */\r\nexport class AttrObserver {\r\n    observer: MutationObserver | null = null\r\n    connected: boolean = false\r\n    constructor(\r\n        public el: HTMLElement,\r\n        public attrs: string[],\r\n        public callback: (attrName: string, attrValue: string | null, target: HTMLElement) => void,\r\n    ) {\r\n        if (!el || !(el instanceof Element)) {\r\n            throw new Error('第一个参数必须是一个DOM元素')\r\n        }\r\n\r\n        if (!Array.isArray(attrs)) {\r\n            throw new Error('第二个参数必须是一个属性名称数组')\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('第三个参数必须是一个回调函数')\r\n        }\r\n        this.connect()\r\n    }\r\n\r\n    connect() {\r\n        if (this.connected) return\r\n        this.observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (\r\n                    mutation.type === 'attributes' &&\r\n                    mutation.attributeName &&\r\n                    this.attrs.includes(mutation.attributeName)\r\n                ) {\r\n                    const newValue = this.el.getAttribute(mutation.attributeName)\r\n\r\n                    this.callback(mutation.attributeName, newValue, this.el)\r\n                }\r\n            })\r\n        })\r\n        this.observer.observe(this.el, {\r\n            attributes: true,\r\n            attributeFilter: this.attrs,\r\n        })\r\n        this.connected = true\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.observer) {\r\n            this.observer.disconnect()\r\n            this.observer = null\r\n        }\r\n    }\r\n}\r\n","export type PresetTheme = {\r\n\tbaseColor: string;\r\n\ttitle?: string;\r\n\tprimary?: string;\r\n\tsuccess?: string;\r\n\twarning?: string;\r\n\tdanger?: string;\r\n\tinfo?: string;\r\n};\r\n\r\nexport const presetThemes: Record<string, PresetTheme> = {\r\n\tlight: {\r\n\t\tbaseColor: \"#c5c5c5\",\r\n\t\ttitle: \"亮色\",\r\n\t},\r\n\tdark: {\r\n\t\tbaseColor: \"#7d7d7d\",\r\n\t\ttitle: \"暗黑\",\r\n\t},\r\n\tred: {\r\n\t\tbaseColor: \"#f5222d\",\r\n\t\ttitle: \"薄暮\",\r\n\t},\r\n\tvolcano: {\r\n\t\tbaseColor: \"#fa541c\",\r\n\t\ttitle: \"火山\",\r\n\t},\r\n\torange: {\r\n\t\tbaseColor: \"#fa8c16\",\r\n\t\ttitle: \"日暮\",\r\n\t},\r\n\tlime: {\r\n\t\tbaseColor: \"#a0d911\",\r\n\t\ttitle: \"青柠\",\r\n\t},\r\n\tgold: {\r\n\t\tbaseColor: \"#faad14\",\r\n\t\ttitle: \"金盏花\",\r\n\t},\r\n\tyellow: {\r\n\t\tbaseColor: \"#fadb14\",\r\n\t\ttitle: \"日出\",\r\n\t},\r\n\tgreen: {\r\n\t\tbaseColor: \"#52c41a\",\r\n\t\ttitle: \"极光绿\",\r\n\t},\r\n\tcyan: {\r\n\t\tbaseColor: \"#13c2c2\",\r\n\t\ttitle: \"明青\",\r\n\t},\r\n\tblue: {\r\n\t\tbaseColor: \"#1677ff\",\r\n\t\ttitle: \"拂晓蓝\",\r\n\t},\r\n\tgeekblue: {\r\n\t\tbaseColor: \"#2f54eb\",\r\n\t\ttitle: \"极客蓝\",\r\n\t},\r\n\tpurple: {\r\n\t\tbaseColor: \"#722ed1\",\r\n\t\ttitle: \"酱紫\",\r\n\t},\r\n\tmagenta: {\r\n\t\tbaseColor: \"#eb2f96\",\r\n\t\ttitle: \"法式洋红\",\r\n\t},\r\n};\r\n","import type { ColorInput } from \"@ant-design/fast-color\";\r\nimport { FastColor } from \"@ant-design/fast-color\";\r\n\r\nconst hueStep = 2; // 色相阶梯\r\nconst saturationStep = 0.16; // 饱和度阶梯，浅色部分\r\nconst saturationStep2 = 0.05; // 饱和度阶梯，深色部分\r\nconst brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\r\nconst brightnessStep2 = 0.15; // 亮度阶梯，深色部分\r\nconst lightColorCount = 5; // 浅色数量，主色上\r\nconst darkColorCount = 4; // 深色数量，主色下\r\n\r\n// 暗色主题颜色映射关系表\r\nconst darkColorMap = [\r\n\t{ index: 7, amount: 15 },\r\n\t{ index: 6, amount: 25 },\r\n\t{ index: 5, amount: 30 },\r\n\t{ index: 5, amount: 45 },\r\n\t{ index: 5, amount: 65 },\r\n\t{ index: 5, amount: 85 },\r\n\t{ index: 4, amount: 90 },\r\n\t{ index: 3, amount: 95 },\r\n\t{ index: 2, amount: 97 },\r\n\t{ index: 1, amount: 98 },\r\n];\r\n\r\ninterface HsvObject {\r\n\th: number;\r\n\ts: number;\r\n\tv: number;\r\n}\r\n\r\nfunction getHue(hsv: HsvObject, i: number, light?: boolean): number {\r\n\tlet hue: number;\r\n\t// 根据色相不同，色相转向不同\r\n\tif (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\r\n\t\thue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\r\n\t} else {\r\n\t\thue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\r\n\t}\r\n\tif (hue < 0) {\r\n\t\thue += 360;\r\n\t} else if (hue >= 360) {\r\n\t\thue -= 360;\r\n\t}\r\n\treturn hue;\r\n}\r\n\r\nfunction getSaturation(hsv: HsvObject, i: number, light?: boolean): number {\r\n\t// grey color don't change saturation\r\n\tif (hsv.h === 0 && hsv.s === 0) {\r\n\t\treturn hsv.s;\r\n\t}\r\n\tlet saturation: number;\r\n\tif (light) {\r\n\t\tsaturation = hsv.s - saturationStep * i;\r\n\t} else if (i === darkColorCount) {\r\n\t\tsaturation = hsv.s + saturationStep;\r\n\t} else {\r\n\t\tsaturation = hsv.s + saturationStep2 * i;\r\n\t}\r\n\t// 边界值修正\r\n\tif (saturation > 1) {\r\n\t\tsaturation = 1;\r\n\t}\r\n\t// 第一格的 s 限制在 0.06-0.1 之间\r\n\tif (light && i === lightColorCount && saturation > 0.1) {\r\n\t\tsaturation = 0.1;\r\n\t}\r\n\tif (saturation < 0.06) {\r\n\t\tsaturation = 0.06;\r\n\t}\r\n\treturn Math.round(saturation * 100) / 100;\r\n}\r\n\r\nfunction getValue(hsv: HsvObject, i: number, light?: boolean): number {\r\n\tlet value: number;\r\n\tif (light) {\r\n\t\tvalue = hsv.v + brightnessStep1 * i;\r\n\t} else {\r\n\t\tvalue = hsv.v - brightnessStep2 * i;\r\n\t}\r\n\t// Clamp value between 0 and 1\r\n\tvalue = Math.max(0, Math.min(1, value));\r\n\treturn Math.round(value * 100) / 100;\r\n}\r\n\r\ninterface Opts {\r\n\ttheme?: \"dark\" | \"default\";\r\n\tbackgroundColor?: string;\r\n}\r\n\r\nexport function generateGradientColors(color: ColorInput, opts: Opts = {}): string[] {\r\n\tconst patterns: FastColor[] = [];\r\n\tconst pColor = new FastColor(color);\r\n\tconst hsv = pColor.toHsv();\r\n\tfor (let i = lightColorCount; i > 0; i -= 1) {\r\n\t\tconst c = new FastColor({\r\n\t\t\th: getHue(hsv, i, true),\r\n\t\t\ts: getSaturation(hsv, i, true),\r\n\t\t\tv: getValue(hsv, i, true),\r\n\t\t});\r\n\t\tpatterns.push(c);\r\n\t}\r\n\tpatterns.push(pColor);\r\n\tfor (let i = 1; i <= darkColorCount; i += 1) {\r\n\t\tconst c = new FastColor({\r\n\t\t\th: getHue(hsv, i),\r\n\t\t\ts: getSaturation(hsv, i),\r\n\t\t\tv: getValue(hsv, i),\r\n\t\t});\r\n\t\tpatterns.push(c);\r\n\t}\r\n\r\n\t// dark theme patterns\r\n\tif (opts.theme === \"dark\") {\r\n\t\treturn darkColorMap.map(({ index, amount }) =>\r\n\t\t\tnew FastColor(opts.backgroundColor || \"#141414\").mix(patterns[index], amount).toHexString(),\r\n\t\t);\r\n\t}\r\n\r\n\treturn patterns.map((c) => c.toHexString());\r\n}\r\n","// 常见颜色名称映射\r\nconst colorNames: Record<string, string> = {\r\n\tblack: \"#000000\",\r\n\twhite: \"#FFFFFF\",\r\n\tred: \"#FF0000\",\r\n\tgreen: \"#008000\",\r\n\tblue: \"#0000FF\",\r\n\tyellow: \"#FFFF00\",\r\n\tpurple: \"#800080\",\r\n\torange: \"#FFA500\",\r\n\tgray: \"#808080\",\r\n\tgrey: \"#808080\",\r\n\tpink: \"#FFC0CB\",\r\n\tbrown: \"#A52A2A\",\r\n\tcyan: \"#00FFFF\",\r\n\tmagenta: \"#FF00FF\",\r\n\tsilver: \"#C0C0C0\",\r\n\tmaroon: \"#800000\",\r\n\tolive: \"#808000\",\r\n\tlime: \"#00FF00\",\r\n\tteal: \"#008080\",\r\n\tnavy: \"#000080\",\r\n};\r\n\r\n// 完整的 toRGB 函数实现\r\nexport function toRGB(color: string): [number, number, number] | null {\r\n\tif (!color) return null;\r\n\r\n\tcolor = color.trim().toLowerCase();\r\n\r\n\t// 十六进制颜色 #RGB 或 #RRGGBB\r\n\tif (color.startsWith(\"#\")) {\r\n\t\treturn hexToRGB(color);\r\n\t}\r\n\r\n\t// rgb(r, g, b) 格式\r\n\tif (color.startsWith(\"rgb\")) {\r\n\t\treturn rgbStringToRGB(color);\r\n\t}\r\n\r\n\t// 颜色名称\r\n\tif (color in colorNames) {\r\n\t\treturn hexToRGB(colorNames[color]);\r\n\t}\r\n\treturn null;\r\n}\r\nfunction hexToRGB(hex: string): [number, number, number] | null {\r\n\thex = hex.replace(\"#\", \"\");\r\n\r\n\t// 处理缩写形式 #RGB\r\n\tif (hex.length === 3) {\r\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n\t}\r\n\r\n\tif (hex.length !== 6) return null;\r\n\r\n\tconst r = parseInt(hex.substring(0, 2), 16);\r\n\tconst g = parseInt(hex.substring(2, 4), 16);\r\n\tconst b = parseInt(hex.substring(4, 6), 16);\r\n\r\n\tif (Number.isNaN(r) || Number.isNaN(g) || Number.isNaN(b)) return null;\r\n\r\n\treturn [r, g, b];\r\n}\r\n\r\nfunction rgbStringToRGB(rgbString: string): [number, number, number] | null {\r\n\tconst match = rgbString.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)/i);\r\n\tif (!match) return null;\r\n\r\n\tconst r = parseInt(match[1], 10);\r\n\tconst g = parseInt(match[2], 10);\r\n\tconst b = parseInt(match[3], 10);\r\n\r\n\tif (Number.isNaN(r) || Number.isNaN(g) || Number.isNaN(b)) return null;\r\n\r\n\treturn [r, g, b];\r\n}\r\n","import { toRGB } from \"./toRGB\";\r\n\r\nexport function isDark(color: string): boolean {\r\n\tconst rgb = toRGB(color);\r\n\tif (!rgb) return false; // 颜色解析失败时默认返回亮色\r\n\r\n\t// 标准的相对亮度公式\r\n\tconst luminance = 0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2];\r\n\treturn luminance < 128;\r\n}\r\n","import type { ThemeOptions } from \"../types\";\r\nimport { generateGradientColors } from \"./generateGradientColors\";\r\nimport { isDark } from \"./isDark\";\r\n\r\nexport type ThemeVariantOptions = {\r\n\tprefix: string;\r\n};\r\nexport function generateGradientVars(color: string, options?: ThemeVariantOptions) {\r\n\tconst { prefix } = Object.assign({}, options) as ThemeVariantOptions;\r\n\r\n\tconst colors = generateGradientColors(color);\r\n\tif (isDark(color)) colors.reverse();\r\n\r\n\tconst vars: Record<string, string> = {};\r\n\r\n\tcolors.reduce((all, cur, i) => {\r\n\t\tvars[`${prefix}${i}`] = cur;\r\n\t\treturn all;\r\n\t}, {}) as Required<ThemeOptions>;\r\n\treturn vars;\r\n}\r\n\r\n// console.log(JSON.stringify(generateGradientVars(\"red\", { prefix: \"--t-color-theme-\" })));\r\n","export function toVarStyles(vars: Record<string, string>) {\r\n\treturn `${Object.entries(vars)\r\n\t\t.map(([key, value]) => `${key}:${value}`)\r\n\t\t.join(\";\\n\")};`;\r\n}\r\n","import { toVarStyles } from \"./toVarStyles\";\r\n\r\nexport function getVarsStyles(vars: Record<string, Record<string, string>>, selector: string, attrName: string) {\r\n\treturn Object.entries(vars)\r\n\t\t.map(([key, value]) => {\r\n\t\t\treturn `${selector}[${attrName}=${key}],[${attrName}=${key}]{\\n${toVarStyles(value)}\\n}`;\r\n\t\t})\r\n\t\t.join(\"\\n\");\r\n}\r\n","export function getId(len: number = 10) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substring(2, len + 2);\r\n}\r\n","import { getId } from \"./getId\";\r\n\r\nexport interface InjectStylesheetOptions {\r\n\tid?: string;\r\n\tlocation?: \"head\" | \"body\" | HTMLElement;\r\n\tmode?: \"replace\" | \"append\";\r\n}\r\n\r\nexport function injectStylesheet(css: string, options?: InjectStylesheetOptions) {\r\n\tif (globalThis.document === undefined) return;\r\n\tconst { id, mode, location = \"head\" } = Object.assign({ mode: \"replace\" }, options);\r\n\tlet style = document.head.querySelector(`#${id}`) as HTMLStyleElement;\r\n\tconst scopeId: string = id || getId();\r\n\tif (!style) {\r\n\t\tstyle = document.createElement(\"style\");\r\n\t\tstyle.id = scopeId;\r\n\t\tif (location === \"body\") {\r\n\t\t\tdocument.body.appendChild(style);\r\n\t\t} else if (location instanceof HTMLElement) {\r\n\t\t\tlocation.appendChild(style);\r\n\t\t} else {\r\n\t\t\tdocument.head.appendChild(style);\r\n\t\t}\r\n\t}\r\n\tif (mode === \"append\") {\r\n\t\tstyle.innerHTML += css;\r\n\t} else {\r\n\t\tstyle.innerHTML = css;\r\n\t}\r\n\treturn scopeId;\r\n}\r\n","import { toRGB } from './toRGB'\r\n\r\nexport function toRGBString(color: string): string {\r\n    const rgb = toRGB(color)\r\n    if (!rgb) return color\r\n    return `#${rgb[0].toString(16).padStart(2, '0')}${rgb[1].toString(16).padStart(2, '0')}${rgb[2].toString(16).padStart(2, '0')}`\r\n}\r\n","export const baseVars = {\r\n\t\"--t-border-radius-x-small\": \"0.2rem\",\r\n\t\"--t-border-radius-small\": \"0.3rem\",\r\n\t\"--t-border-radius-medium\": \"0.5rem\",\r\n\t\"--t-border-radius-large\": \"1rem\",\r\n\t\"--t-border-radius-x-large\": \"1.2rem\",\r\n\r\n\t\"--t-border-radius-circle\": \"50%\",\r\n\t\"--t-border-radius-pill\": \"9999px\",\r\n\r\n\t\"--t-shadow-x-small\": \"0 1px 2px hsl(240 3.8% 46.1% / 6%)\",\r\n\t\"--t-shadow-small\": \"0 1px 2px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-medium\": \"0 2px 4px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-large\": \"0 2px 8px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-x-large\": \"0 4px 16px hsl(240 3.8% 46.1% / 12%)\",\r\n\r\n\t\"--t-font-size-x-small\": \"0.75rem\",\r\n\t\"--t-font-size-small\": \"0.875rem\",\r\n\t\"--t-font-size-medium\": \"1rem\",\r\n\t\"--t-font-size-large\": \"1.25rem\",\r\n\t\"--t-font-size-x-large\": \"1.5rem\",\r\n\r\n\t\"--t-font-weight-x-small\": \"100\",\r\n\t\"--t-font-weight-small\": \"200\",\r\n\t\"--t-font-weight-medium\": \"300\",\r\n\t\"--t-font-weight-large\": \"400\",\r\n\t\"--t-font-weight-x-large\": \"500\",\r\n\r\n\t/* 间距 */\r\n\t\"--t-spacing-x-small\": \"0.5rem\",\r\n\t\"--t-spacing-small\": \"0.75rem\",\r\n\t\"--t-spacing-medium\": \"1rem\",\r\n\t\"--t-spacing-large\": \"1.25rem\",\r\n\t\"--t-spacing-x-large\": \"1.75rem\",\r\n\r\n\t\"--t-letter-spacing-x-small\": \"calc(var(--t-spacing-medium) * 0.01)\",\r\n\t\"--t-letter-spacing-small\": \"calc(var(--t-spacing-medium) * 0.02)\",\r\n\t\"--t-letter-spacing-medium\": \"calc(var(--t-spacing-medium) * 0.05)\",\r\n\t\"--t-letter-spacing-large\": \"calc(var(--t-spacing-medium) * 0.1)\",\r\n\t\"--t-letter-spacing-x-large\": \"calc(var(--t-spacing-medium) * 0.1)\",\r\n\r\n\t\"--t-line-height-x-small\": \"var(--t-spacing-medium)\",\r\n\t\"--t-line-height-small\": \"calc(var(--t-spacing-medium) * 1.2)\",\r\n\t\"--t-line-height-medium\": \"calc(var(--t-spacing-medium) * 1.5)\",\r\n\t\"--t-line-height-large\": \"calc(var(--t-spacing-medium) * 1.8)\",\r\n\t\"--t-line-height-x-large\": \"calc(var(--t-spacing-medium) * 2)\",\r\n};\r\n","export const derivedVars = {\r\n\t/* 主题色 */\r\n\t\"--t-theme-color\": \"var(--t-color-theme-8)\",\r\n\t\"--t-theme-bgcolor\": \"var(--t-color-theme-0)\",\r\n\t\"--t-theme-bgcolor-1\": \"var(--t-color-theme-1)\",\r\n\t\"--t-theme-bgcolor-2\": \"var(--t-color-theme-2)\",\r\n\t\"--t-theme-bgcolor-3\": \"var(--t-color-theme-3)\",\r\n\t\"--t-theme-bgcolor-4\": \"var(--t-color-theme-4)\",\r\n\t\"--t-theme-bgcolor-5\": \"var(--t-color-theme-5)\",\r\n\t/* 主色调 */\r\n\t\"--auto-primary-color\": \"var(--t-color-primary-5)\",\r\n\t\"--auto-success-color\": \"var(--t-color-success-5)\",\r\n\t\"--auto-danger-color\": \"var(--t-color-danger-5)\",\r\n\t\"--auto-warning-color\": \"var(--t-color-warning-5)\",\r\n\t\"--auto-info-color\": \"var(--t-color-info-5)\",\r\n\t\"--auto-theme-color\": \"var(--t-color-theme-5)\",\r\n\r\n\t/* 字体颜色 */\r\n\t\"--auto-color\": \"var(--t-theme-color)\",\r\n\t\"--auto-secondary-color\": \"var(--t-color-theme-4)\",\r\n\t\"--auto-disable-color\": \"var(--t-color-theme-3)\",\r\n\t\"--auto-hover-color\": \"var(--t-color-theme-4)\",\r\n\t\"--auto-dark-color\": \"color-mix(in srgb, var(--auto-color), black 10%)\",\r\n\t\"--auto-light-color\": \"color-mix(in srgb, var(--auto-color), white 10%)\",\r\n\r\n\t/* 背景颜色: 用于面板/对话框/组件的背景 */\r\n\t\"--auto-bgcolor\": \"var(--t-theme-bgcolor)\",\r\n\t\"--auto-workspace-bgcolor\": \"var(--t-color-theme-1)\",\r\n\t/* 亮色: 相对于背景的亮色*/\r\n\t\"--auto-light-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), white 20%)\",\r\n\t/* 暗色: 相对于背景的暗色背景*/\r\n\t\"--auto-dark-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), black 10%)\",\r\n\r\n\t/** 随随色背景颜色：用于自动选中颜色，或根据背景颜色自动匹配背景颜色*/\r\n\t\"--auto-selected-bgcolor\": \"var(--t-color-theme-5)\",\r\n\t\"--auto-hover-bgcolor\": \"color-mix(in srgb, var(--t-color-theme-5), transparent 85%)\",\r\n\r\n\t/* 边框 */\r\n\t\"--auto-border\": \"1px solid var(--auto-border-color)\",\r\n\t\"--auto-border-color\": \"var(--t-color-theme-2)\",\r\n\t\"--auto-selected-border\": \"1px solid var(--t-color-theme-6)\",\r\n\t\"--auto-active-border\": \"1px solid var(--t-color-theme-6)\",\r\n\t\"--auto-disable-border\": \"1px solid var(--auto-disable-color)\",\r\n\t\"--auto-border-active-color\": \"var(--t-color-primary-3)\",\r\n\r\n\t/* 排版/字体 */\r\n\t\"--auto-font\": \"var(--auto-font-weight) var(--auto-font-size)/1.5 var(--auto-font-family)\",\r\n\t\"--auto-font-family\":\r\n\t\t\"Lantinghei SC,Microsoft Yahei,Hiragino Sans GB,Microsoft Sans Serif,WenQuanYi Micro Hei,sans-serif\",\r\n\t\"--auto-font-size\": \"var(--t-font-size-medium)\",\r\n\t\"--auto-font-weight\": \"var(--t-font-weight-medium)\",\r\n\t\"--auto-letter-spacing\": \"var(--t-letter-spacing-medium)\",\r\n\t\"--auto-line-height\": \"var(--t-line-height-medium)\",\r\n\t\"--auto-title-font\":\r\n\t\t\"calc(var(--auto-font-weight) + 200) calc(var(--auto-font-size) * 1.1)/1.5 var(--auto-font-family)\",\r\n\t/* 面板: 用于导航/标题栏/标签页标题 */\r\n\t\"--auto-panel-title-color\": \"var(--t-theme-color-6)\",\r\n\t/** 标题背景颜色：用于标题/标题栏的背景颜色*/\r\n\t\"--auto-panel-title-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), black 5%)\",\r\n\t/* 面板背景颜色：用于面板/区块/Drawer等背景颜色*/\r\n\t\"--auto-panel-bgcolor\": \"var(--auto-light-bgcolor)\",\r\n\r\n\t/* 边框/间距 */\r\n\t\"--auto-border-radius\": \"var(--t-border-radius-medium)\",\r\n\t\"--auto-spacing\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-padding\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-margin\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-shadow\": \"var(--t-shadow-medium)\",\r\n\r\n\t/* 输入框 */\r\n\t/** 输入框背景颜色：用于输入框背景颜色*/\r\n\t\"--auto-input-bgcolor\": \"var(--t-theme-bgcolor)\",\r\n\t\"--auto-input-padding\": \"calc(0.5 * var(--auto-padding))\",\r\n\t\"--auto-input-height\": \"var(--t-line-height-medium)\",\r\n\t/** 其他 */\r\n\t\"--auto-icon-size\": \"calc(1.2 * var(--t-font-size-medium))\",\r\n};\r\n","import type { ThemeSize } from \"../types\";\r\n\r\nfunction getSizeVars(size: ThemeSize) {\r\n\treturn {\r\n\t\t/** 段落与字体 */\r\n\t\t\"--auto-font-size\": `var(--t-font-size-${size})`,\r\n\t\t\"--auto-font-weight\": `var(--t-font-weight-${size})`,\r\n\t\t\"--auto-letter-spacing\": `var(--t-letter-spacing-${size})`,\r\n\t\t\"--auto-line-height\": `var(--t-line-height-${size})`,\r\n\t\t/* 用于内边距和外边距 */\r\n\t\t\"--auto-spacing\": `var(--t-spacing-${size})`,\r\n\t\t\"--auto-padding\": `var(--t-spacing-${size})`,\r\n\t\t\"--auto-margin\": `var(--t-spacing-${size})`,\r\n\r\n\t\t\"--auto-shadow\": `var(--t-shadow-${size})`,\r\n\t\t\"--auto-icon-size\": `calc(1.5 * var(--t-font-size-${size}))`,\r\n\t\t/* 输入框 */\r\n\t\t\"--auto-input-height\": `var(--t-input-height-${size})`,\r\n\t};\r\n}\r\n\r\nexport const sizeVars = {\r\n\t\"x-small\": getSizeVars(\"x-small\"),\r\n\tsmall: getSizeVars(\"small\"),\r\n\tmedium: getSizeVars(\"medium\"),\r\n\tlarge: getSizeVars(\"large\"),\r\n\t\"x-large\": getSizeVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\";\r\n\r\nfunction getRadiusVars(radius: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-border-radius\": `var(--t-border-radius-${radius})!important`,\r\n\t};\r\n}\r\n\r\nexport const radiusVars = {\r\n\t\"x-small\": getRadiusVars(\"x-small\"),\r\n\tsmall: getRadiusVars(\"small\"),\r\n\tmedium: getRadiusVars(\"medium\"),\r\n\tlarge: getRadiusVars(\"large\"),\r\n\t\"x-large\": getRadiusVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\"; \r\n\r\nfunction getSpacingVars(spacing: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-spacing\": `var(--t-spacing-${spacing}) !important`,\r\n\t\t\"--auto-padding\": `var(--t-spacing-${spacing}) !important`,\r\n\t\t\"--auto-margin\": `var(--t-spacing-${spacing}) !important`,\r\n\t};\r\n}\r\n\r\nexport const spacingVars = {\r\n\t\"x-small\": getSpacingVars(\"x-small\"),\r\n\tsmall: getSpacingVars(\"small\"),\r\n\tmedium: getSpacingVars(\"medium\"),\r\n\tlarge: getSpacingVars(\"large\"),\r\n\t\"x-large\": getSpacingVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\";\r\n\r\nfunction getShadowVars(size: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-shadow\": `var(--t-shadow-${size})!important`,\r\n\t};\r\n}\r\n\r\nexport const shadowVars = {\r\n\t\"x-small\": getShadowVars(\"x-small\"),\r\n\tsmall: getShadowVars(\"small\"),\r\n\tmedium: getShadowVars(\"medium\"),\r\n\tlarge: getShadowVars(\"large\"),\r\n\t\"x-large\": getShadowVars(\"x-large\"),\r\n};\r\n","import { AttrObserver } from './observer'\r\nimport { presetThemes } from './presets'\r\nimport type { ThemeOptions, ThemeSize } from './types'\r\nimport { generateGradientVars } from './utils/generateGradientVars'\r\nimport { getVarsStyles } from './utils/getVarsStyles'\r\nimport { injectStylesheet } from './utils/injectStylesheet'\r\nimport { isDark } from './utils/isDark'\r\nimport { toRGBString } from './utils/toRGBString'\r\nimport { toVarStyles } from './utils/toVarStyles'\r\nimport { baseVars, radiusVars, derivedVars, shadowVars, spacingVars, sizeVars } from './vars'\r\n\r\nexport class Themepro {\r\n    scope!: HTMLElement\r\n    options: Required<ThemeOptions>\r\n    attrObserver!: AttrObserver\r\n    dark: boolean = false\r\n    vars: Record<string, string> = {}\r\n    selector: string = ':host,:root'\r\n    constructor(scope?: string | HTMLElement, options?: ThemeOptions) {\r\n        this.options = Object.assign(\r\n            {\r\n                selector: ':host,:root',\r\n                theme: 'light',\r\n                size: 'medium',\r\n                radius: 'medium',\r\n                spacing: 'medium',\r\n                shadow: 'medium',\r\n                border: '1px',\r\n                primary: '#2f54eb',\r\n                success: '#22c55e',\r\n                warning: '#f59e0b',\r\n                danger: '#ef4444',\r\n                info: '#71717a',\r\n            },\r\n            options,\r\n        ) as Required<ThemeOptions>\r\n        if (typeof scope === 'string') {\r\n            window.addEventListener('DOMContentLoaded', () => {\r\n                this.scope = document.querySelector(scope) || document.documentElement\r\n                this._init()\r\n            })\r\n        } else {\r\n            this.scope = scope || document.documentElement\r\n            this._init()\r\n        }\r\n    }\r\n    private _init() {\r\n        this.attrObserver = new AttrObserver(\r\n            this.scope,\r\n            ['data-theme', 'data-primary', 'data-success', 'data-warning', 'data-danger', 'data-info'],\r\n            this._onThemeAttrsChange.bind(this),\r\n        )\r\n        this._injectBaseStyles()\r\n        this._createKeyColorStyles()\r\n        this.update()\r\n    }\r\n    get size() {\r\n        return (this.scope.dataset.size || this.options.size || 'medium') as ThemeSize\r\n    }\r\n    set size(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-size')\r\n        } else {\r\n            this.scope.dataset.size = value\r\n        }\r\n    }\r\n    get spacing(): ThemeSize {\r\n        return (this.scope.dataset.spacing || this.options.spacing || 'medium') as ThemeSize\r\n    }\r\n    set spacing(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-spacing')\r\n        } else {\r\n            this.scope.dataset.spacing = value\r\n        }\r\n    }\r\n    get shadow() {\r\n        return (this.scope.dataset.shadow || this.options.shadow || 'medium') as ThemeSize\r\n    }\r\n    set shadow(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-shadow')\r\n        } else {\r\n            this.scope.dataset.shadow = value\r\n        }\r\n    }\r\n    get radius(): ThemeSize {\r\n        return (this.scope.dataset.radius || this.options.radius || 'medium') as ThemeSize\r\n    }\r\n    set radius(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-radius')\r\n        } else {\r\n            this.scope.dataset.radius = value\r\n        }\r\n    }\r\n    get theme(): string {\r\n        return (this.scope.dataset.theme || this.options.theme || 'light') as string\r\n    }\r\n    set theme(value: string) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-theme')\r\n        } else {\r\n            this.scope.dataset.theme = value in presetThemes ? presetThemes[value].baseColor : toRGBString(value)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当属性变化时，更新主题\r\n     *\r\n     * @param attrName\r\n     * @param attrValue\r\n     */\r\n    private _onThemeAttrsChange(attrName: string, attrValue: string | null) {\r\n        if (attrName === 'data-theme') {\r\n            this.update({ theme: attrValue || 'light' })\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    update(options?: ThemeOptions) {\r\n        Object.assign(this.options, options)\r\n        const { theme = 'light', size, radius, spacing, shadow } = this.options\r\n        this.dark = false\r\n        if (theme in presetThemes) {\r\n            this.options.theme = presetThemes[theme].baseColor\r\n        }\r\n\r\n        this.size = size\r\n        this.radius = radius\r\n        this.spacing = spacing\r\n        this.shadow = shadow\r\n\r\n        const themeColorVars = this._createThemeColorVars()\r\n        this.dark = isDark(this.theme)\r\n        const themeName = theme\r\n        const style = `${this.selector}[data-theme='${themeName}'],[data-theme='${themeName}']{\r\n            ${`color-scheme: ${this.dark ? 'dark' : 'light'}`};\r\n            ${Object.entries(themeColorVars)\r\n                .map(([key, value]) => `${key}:${value}`)\r\n                .join(';\\n')};\r\n            }`\r\n\r\n        injectStylesheet(style, {\r\n            id: `themepro-theme`,\r\n        })\r\n    }\r\n    /**\r\n     * 获取默认主题的样式字符串\r\n     * @returns {string} 包含CSS变量和颜色模式的主题样式字符串\r\n     * @private\r\n     */\r\n    private _getDefaultThemeStyles() {\r\n        const dark = isDark(presetThemes.light.baseColor)\r\n        return `${this.selector}{\\n${`color-scheme: ${dark ? 'dark' : 'light'}`};\\n${toVarStyles(this._createThemeColorVars(presetThemes.light.baseColor))}\\n}\\n`\r\n    }\r\n    private _createThemeColorVars(theme: string = this.theme) {\r\n        const themeColor = theme in presetThemes ? presetThemes[theme].baseColor : theme\r\n        const vars: Record<string, string> = generateGradientVars(themeColor, {\r\n            prefix: '--t-color-theme-',\r\n        })\r\n        return vars\r\n    }\r\n    private _createKeyColorStyles() {\r\n        const variants = ['primary', 'success', 'warning', 'danger', 'info']\r\n        const vars: Record<string, string> = {}\r\n        variants.forEach((name) => {\r\n            // @ts-expect-error\r\n            if (this.options[name]) {\r\n                // @ts-expect-error\r\n                Object.assign(vars, generateGradientVars(this.options[name], { prefix: `--t-color-${name}-` }))\r\n            }\r\n        })\r\n        injectStylesheet(`${this.selector}{\\n${toVarStyles(vars)}}\\n}\\n`, {\r\n            id: 'themepro-keycolors',\r\n        })\r\n    }\r\n    private _injectBaseStyles() {\r\n        const baseStyles = `${this.selector}{\\n${toVarStyles(baseVars)}\\n${toVarStyles(derivedVars)}\\n}\\n`\r\n        const sizeStyles = getVarsStyles(sizeVars, this.selector, 'data-size')\r\n        const radiusStyles = getVarsStyles(radiusVars, this.selector, 'data-radius')\r\n        const spacingStyles = getVarsStyles(spacingVars, this.selector, 'data-spacing')\r\n        const shadowStyles = getVarsStyles(shadowVars, this.selector, 'data-shadow')\r\n        const lightStyles = this._getDefaultThemeStyles()\r\n        injectStylesheet(\r\n            `${baseStyles}\\n${sizeStyles}\\n${radiusStyles}\\n${spacingStyles}\\n${shadowStyles}\\n${lightStyles}`,\r\n            {\r\n                id: 'themepro-vars',\r\n            },\r\n        )\r\n    }\r\n}\r\n\r\n// 创建默认的主题应用\r\nexport const themePro = new Themepro()\r\n\r\nglobalThis.ThemePro = themePro\r\n\r\ndeclare global {\r\n    var ThemePro: typeof themePro\r\n}\r\n","import { isDark } from \"./isDark\";\r\n\r\nexport function isLight(color:string):boolean{\r\n    return isDark(color)\r\n}\r\n"],"mappings":"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","names":[]}
{"version":3,"sources":["../src/observer.ts","../src/presets.ts","../node_modules/@ant-design/fast-color/es/presetColors.js","../node_modules/@ant-design/fast-color/es/FastColor.js","../src/utils/generateGradientColors.ts","../src/utils/toRGB.ts","../src/utils/isDark.ts","../src/utils/generateGradientVars.ts","../src/utils/toVarStyles.ts","../src/utils/getVarsStyles.ts","../src/utils/getId.ts","../src/utils/injectStylesheet.ts","../src/utils/toRGBString.ts","../src/vars/base.ts","../src/vars/derived.ts","../src/vars/size.ts","../src/vars/radius.ts","../src/vars/spacing.ts","../src/vars/shadow.ts","../src/themepro.ts","../src/utils/isLight.ts"],"sourcesContent":["/**\r\n *\r\n * 监听DOM元素的指定属性变化，并执行回调函数\r\n *\r\n */\r\nexport class AttrObserver {\r\n    observer: MutationObserver | null = null\r\n    connected: boolean = false\r\n    constructor(\r\n        public el: HTMLElement,\r\n        public attrs: string[],\r\n        public callback: (attrName: string, attrValue: string | null, target: HTMLElement) => void,\r\n    ) {\r\n        if (!el || !(el instanceof Element)) {\r\n            throw new Error('第一个参数必须是一个DOM元素')\r\n        }\r\n\r\n        if (!Array.isArray(attrs)) {\r\n            throw new Error('第二个参数必须是一个属性名称数组')\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('第三个参数必须是一个回调函数')\r\n        }\r\n        this.connect()\r\n    }\r\n\r\n    connect() {\r\n        if (this.connected) return\r\n        this.observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (\r\n                    mutation.type === 'attributes' &&\r\n                    mutation.attributeName &&\r\n                    this.attrs.includes(mutation.attributeName)\r\n                ) {\r\n                    const newValue = this.el.getAttribute(mutation.attributeName)\r\n\r\n                    this.callback(mutation.attributeName, newValue, this.el)\r\n                }\r\n            })\r\n        })\r\n        this.observer.observe(this.el, {\r\n            attributes: true,\r\n            attributeFilter: this.attrs,\r\n        })\r\n        this.connected = true\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.observer) {\r\n            this.observer.disconnect()\r\n            this.observer = null\r\n        }\r\n    }\r\n}\r\n","export type PresetTheme = {\r\n\tbaseColor: string;\r\n\ttitle?: string;\r\n\tprimary?: string;\r\n\tsuccess?: string;\r\n\twarning?: string;\r\n\tdanger?: string;\r\n\tinfo?: string;\r\n};\r\n\r\nexport const presetThemes: Record<string, PresetTheme> = {\r\n\tlight: {\r\n\t\tbaseColor: \"#c5c5c5\",\r\n\t\ttitle: \"亮色\",\r\n\t},\r\n\tdark: {\r\n\t\tbaseColor: \"#7d7d7d\",\r\n\t\ttitle: \"暗黑\",\r\n\t},\r\n\tred: {\r\n\t\tbaseColor: \"#f5222d\",\r\n\t\ttitle: \"薄暮\",\r\n\t},\r\n\tvolcano: {\r\n\t\tbaseColor: \"#fa541c\",\r\n\t\ttitle: \"火山\",\r\n\t},\r\n\torange: {\r\n\t\tbaseColor: \"#fa8c16\",\r\n\t\ttitle: \"日暮\",\r\n\t},\r\n\tlime: {\r\n\t\tbaseColor: \"#a0d911\",\r\n\t\ttitle: \"青柠\",\r\n\t},\r\n\tgold: {\r\n\t\tbaseColor: \"#faad14\",\r\n\t\ttitle: \"金盏花\",\r\n\t},\r\n\tyellow: {\r\n\t\tbaseColor: \"#fadb14\",\r\n\t\ttitle: \"日出\",\r\n\t},\r\n\tgreen: {\r\n\t\tbaseColor: \"#52c41a\",\r\n\t\ttitle: \"极光绿\",\r\n\t},\r\n\tcyan: {\r\n\t\tbaseColor: \"#13c2c2\",\r\n\t\ttitle: \"明青\",\r\n\t},\r\n\tblue: {\r\n\t\tbaseColor: \"#1677ff\",\r\n\t\ttitle: \"拂晓蓝\",\r\n\t},\r\n\tgeekblue: {\r\n\t\tbaseColor: \"#2f54eb\",\r\n\t\ttitle: \"极客蓝\",\r\n\t},\r\n\tpurple: {\r\n\t\tbaseColor: \"#722ed1\",\r\n\t\ttitle: \"酱紫\",\r\n\t},\r\n\tmagenta: {\r\n\t\tbaseColor: \"#eb2f96\",\r\n\t\ttitle: \"法式洋红\",\r\n\t},\r\n};\r\n","// 36 Hex to reduce the size of the file\nexport default {\n  aliceblue: '9ehhb',\n  antiquewhite: '9sgk7',\n  aqua: '1ekf',\n  aquamarine: '4zsno',\n  azure: '9eiv3',\n  beige: '9lhp8',\n  bisque: '9zg04',\n  black: '0',\n  blanchedalmond: '9zhe5',\n  blue: '73',\n  blueviolet: '5e31e',\n  brown: '6g016',\n  burlywood: '8ouiv',\n  cadetblue: '3qba8',\n  chartreuse: '4zshs',\n  chocolate: '87k0u',\n  coral: '9yvyo',\n  cornflowerblue: '3xael',\n  cornsilk: '9zjz0',\n  crimson: '8l4xo',\n  cyan: '1ekf',\n  darkblue: '3v',\n  darkcyan: 'rkb',\n  darkgoldenrod: '776yz',\n  darkgray: '6mbhl',\n  darkgreen: 'jr4',\n  darkgrey: '6mbhl',\n  darkkhaki: '7ehkb',\n  darkmagenta: '5f91n',\n  darkolivegreen: '3bzfz',\n  darkorange: '9yygw',\n  darkorchid: '5z6x8',\n  darkred: '5f8xs',\n  darksalmon: '9441m',\n  darkseagreen: '5lwgf',\n  darkslateblue: '2th1n',\n  darkslategray: '1ugcv',\n  darkslategrey: '1ugcv',\n  darkturquoise: '14up',\n  darkviolet: '5rw7n',\n  deeppink: '9yavn',\n  deepskyblue: '11xb',\n  dimgray: '442g9',\n  dimgrey: '442g9',\n  dodgerblue: '16xof',\n  firebrick: '6y7tu',\n  floralwhite: '9zkds',\n  forestgreen: '1cisi',\n  fuchsia: '9y70f',\n  gainsboro: '8m8kc',\n  ghostwhite: '9pq0v',\n  goldenrod: '8j4f4',\n  gold: '9zda8',\n  gray: '50i2o',\n  green: 'pa8',\n  greenyellow: '6senj',\n  grey: '50i2o',\n  honeydew: '9eiuo',\n  hotpink: '9yrp0',\n  indianred: '80gnw',\n  indigo: '2xcoy',\n  ivory: '9zldc',\n  khaki: '9edu4',\n  lavenderblush: '9ziet',\n  lavender: '90c8q',\n  lawngreen: '4vk74',\n  lemonchiffon: '9zkct',\n  lightblue: '6s73a',\n  lightcoral: '9dtog',\n  lightcyan: '8s1rz',\n  lightgoldenrodyellow: '9sjiq',\n  lightgray: '89jo3',\n  lightgreen: '5nkwg',\n  lightgrey: '89jo3',\n  lightpink: '9z6wx',\n  lightsalmon: '9z2ii',\n  lightseagreen: '19xgq',\n  lightskyblue: '5arju',\n  lightslategray: '4nwk9',\n  lightslategrey: '4nwk9',\n  lightsteelblue: '6wau6',\n  lightyellow: '9zlcw',\n  lime: '1edc',\n  limegreen: '1zcxe',\n  linen: '9shk6',\n  magenta: '9y70f',\n  maroon: '4zsow',\n  mediumaquamarine: '40eju',\n  mediumblue: '5p',\n  mediumorchid: '79qkz',\n  mediumpurple: '5r3rv',\n  mediumseagreen: '2d9ip',\n  mediumslateblue: '4tcku',\n  mediumspringgreen: '1di2',\n  mediumturquoise: '2uabw',\n  mediumvioletred: '7rn9h',\n  midnightblue: 'z980',\n  mintcream: '9ljp6',\n  mistyrose: '9zg0x',\n  moccasin: '9zfzp',\n  navajowhite: '9zest',\n  navy: '3k',\n  oldlace: '9wq92',\n  olive: '50hz4',\n  olivedrab: '472ub',\n  orange: '9z3eo',\n  orangered: '9ykg0',\n  orchid: '8iu3a',\n  palegoldenrod: '9bl4a',\n  palegreen: '5yw0o',\n  paleturquoise: '6v4ku',\n  palevioletred: '8k8lv',\n  papayawhip: '9zi6t',\n  peachpuff: '9ze0p',\n  peru: '80oqn',\n  pink: '9z8wb',\n  plum: '8nba5',\n  powderblue: '6wgdi',\n  purple: '4zssg',\n  rebeccapurple: '3zk49',\n  red: '9y6tc',\n  rosybrown: '7cv4f',\n  royalblue: '2jvtt',\n  saddlebrown: '5fmkz',\n  salmon: '9rvci',\n  sandybrown: '9jn1c',\n  seagreen: '1tdnb',\n  seashell: '9zje6',\n  sienna: '6973h',\n  silver: '7ir40',\n  skyblue: '5arjf',\n  slateblue: '45e4t',\n  slategray: '4e100',\n  slategrey: '4e100',\n  snow: '9zke2',\n  springgreen: '1egv',\n  steelblue: '2r1kk',\n  tan: '87yx8',\n  teal: 'pds',\n  thistle: '8ggk8',\n  tomato: '9yqfb',\n  turquoise: '2j4r4',\n  violet: '9b10u',\n  wheat: '9ld4j',\n  white: '9zldr',\n  whitesmoke: '9lhpx',\n  yellow: '9zl6o',\n  yellowgreen: '61fzm'\n};","import presetColors from \"./presetColors\";\nconst round = Math.round;\n\n/**\n * Support format, alpha unit will check the % mark:\n * - rgba(102, 204, 255, .5)      -> [102, 204, 255, 0.5]\n * - rgb(102 204 255 / .5)        -> [102, 204, 255, 0.5]\n * - rgb(100%, 50%, 0% / 50%)     -> [255, 128, 0, 0.5]\n * - hsl(270, 60, 40, .5)         -> [270, 60, 40, 0.5]\n * - hsl(270deg 60% 40% / 50%)   -> [270, 60, 40, 0.5]\n *\n * When `base` is provided, the percentage value will be divided by `base`.\n */\nfunction splitColorStr(str, parseNum) {\n  const match = str\n  // Remove str before `(`\n  .replace(/^[^(]*\\((.*)/, '$1')\n  // Remove str after `)`\n  .replace(/\\).*/, '').match(/\\d*\\.?\\d+%?/g) || [];\n  const numList = match.map(item => parseFloat(item));\n  for (let i = 0; i < 3; i += 1) {\n    numList[i] = parseNum(numList[i] || 0, match[i] || '', i);\n  }\n\n  // For alpha. 50% should be 0.5\n  if (match[3]) {\n    numList[3] = match[3].includes('%') ? numList[3] / 100 : numList[3];\n  } else {\n    // By default, alpha is 1\n    numList[3] = 1;\n  }\n  return numList;\n}\nconst parseHSVorHSL = (num, _, index) => index === 0 ? num : num / 100;\n\n/** round and limit number to integer between 0-255 */\nfunction limitRange(value, max) {\n  const mergedMax = max || 255;\n  if (value > mergedMax) {\n    return mergedMax;\n  }\n  if (value < 0) {\n    return 0;\n  }\n  return value;\n}\nexport class FastColor {\n  /**\n   * All FastColor objects are valid. So isValid is always true. This property is kept to be compatible with TinyColor.\n   */\n  isValid = true;\n\n  /**\n   * Red, R in RGB\n   */\n  r = 0;\n\n  /**\n   * Green, G in RGB\n   */\n  g = 0;\n\n  /**\n   * Blue, B in RGB\n   */\n  b = 0;\n\n  /**\n   * Alpha/Opacity, A in RGBA/HSLA\n   */\n  a = 1;\n\n  // HSV privates\n  _h;\n  _s;\n  _l;\n  _v;\n\n  // intermediate variables to calculate HSL/HSV\n  _max;\n  _min;\n  _brightness;\n  constructor(input) {\n    /**\n     * Always check 3 char in the object to determine the format.\n     * We not use function in check to save bundle size.\n     * e.g. 'rgb' -> { r: 0, g: 0, b: 0 }.\n     */\n    function matchFormat(str) {\n      return str[0] in input && str[1] in input && str[2] in input;\n    }\n    if (!input) {\n      // Do nothing since already initialized\n    } else if (typeof input === 'string') {\n      const trimStr = input.trim();\n      function matchPrefix(prefix) {\n        return trimStr.startsWith(prefix);\n      }\n      if (/^#?[A-F\\d]{3,8}$/i.test(trimStr)) {\n        this.fromHexString(trimStr);\n      } else if (matchPrefix('rgb')) {\n        this.fromRgbString(trimStr);\n      } else if (matchPrefix('hsl')) {\n        this.fromHslString(trimStr);\n      } else if (matchPrefix('hsv') || matchPrefix('hsb')) {\n        this.fromHsvString(trimStr);\n      } else {\n        // From preset color\n        const presetColor = presetColors[trimStr.toLowerCase()];\n        if (presetColor) {\n          this.fromHexString(\n          // Convert 36 hex to 16 hex\n          parseInt(presetColor, 36).toString(16).padStart(6, '0'));\n        }\n      }\n    } else if (input instanceof FastColor) {\n      this.r = input.r;\n      this.g = input.g;\n      this.b = input.b;\n      this.a = input.a;\n      this._h = input._h;\n      this._s = input._s;\n      this._l = input._l;\n      this._v = input._v;\n    } else if (matchFormat('rgb')) {\n      this.r = limitRange(input.r);\n      this.g = limitRange(input.g);\n      this.b = limitRange(input.b);\n      this.a = typeof input.a === 'number' ? limitRange(input.a, 1) : 1;\n    } else if (matchFormat('hsl')) {\n      this.fromHsl(input);\n    } else if (matchFormat('hsv')) {\n      this.fromHsv(input);\n    } else {\n      throw new Error('@ant-design/fast-color: unsupported input ' + JSON.stringify(input));\n    }\n  }\n\n  // ======================= Setter =======================\n\n  setR(value) {\n    return this._sc('r', value);\n  }\n  setG(value) {\n    return this._sc('g', value);\n  }\n  setB(value) {\n    return this._sc('b', value);\n  }\n  setA(value) {\n    return this._sc('a', value, 1);\n  }\n  setHue(value) {\n    const hsv = this.toHsv();\n    hsv.h = value;\n    return this._c(hsv);\n  }\n\n  // ======================= Getter =======================\n  /**\n   * Returns the perceived luminance of a color, from 0-1.\n   * @see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   */\n  getLuminance() {\n    function adjustGamma(raw) {\n      const val = raw / 255;\n      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n    }\n    const R = adjustGamma(this.r);\n    const G = adjustGamma(this.g);\n    const B = adjustGamma(this.b);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  }\n  getHue() {\n    if (typeof this._h === 'undefined') {\n      const delta = this.getMax() - this.getMin();\n      if (delta === 0) {\n        this._h = 0;\n      } else {\n        this._h = round(60 * (this.r === this.getMax() ? (this.g - this.b) / delta + (this.g < this.b ? 6 : 0) : this.g === this.getMax() ? (this.b - this.r) / delta + 2 : (this.r - this.g) / delta + 4));\n      }\n    }\n    return this._h;\n  }\n  getSaturation() {\n    if (typeof this._s === 'undefined') {\n      const delta = this.getMax() - this.getMin();\n      if (delta === 0) {\n        this._s = 0;\n      } else {\n        this._s = delta / this.getMax();\n      }\n    }\n    return this._s;\n  }\n  getLightness() {\n    if (typeof this._l === 'undefined') {\n      this._l = (this.getMax() + this.getMin()) / 510;\n    }\n    return this._l;\n  }\n  getValue() {\n    if (typeof this._v === 'undefined') {\n      this._v = this.getMax() / 255;\n    }\n    return this._v;\n  }\n\n  /**\n   * Returns the perceived brightness of the color, from 0-255.\n   * Note: this is not the b of HSB\n   * @see http://www.w3.org/TR/AERT#color-contrast\n   */\n  getBrightness() {\n    if (typeof this._brightness === 'undefined') {\n      this._brightness = (this.r * 299 + this.g * 587 + this.b * 114) / 1000;\n    }\n    return this._brightness;\n  }\n\n  // ======================== Func ========================\n\n  darken(amount = 10) {\n    const h = this.getHue();\n    const s = this.getSaturation();\n    let l = this.getLightness() - amount / 100;\n    if (l < 0) {\n      l = 0;\n    }\n    return this._c({\n      h,\n      s,\n      l,\n      a: this.a\n    });\n  }\n  lighten(amount = 10) {\n    const h = this.getHue();\n    const s = this.getSaturation();\n    let l = this.getLightness() + amount / 100;\n    if (l > 1) {\n      l = 1;\n    }\n    return this._c({\n      h,\n      s,\n      l,\n      a: this.a\n    });\n  }\n\n  /**\n   * Mix the current color a given amount with another color, from 0 to 100.\n   * 0 means no mixing (return current color).\n   */\n  mix(input, amount = 50) {\n    const color = this._c(input);\n    const p = amount / 100;\n    const calc = key => (color[key] - this[key]) * p + this[key];\n    const rgba = {\n      r: round(calc('r')),\n      g: round(calc('g')),\n      b: round(calc('b')),\n      a: round(calc('a') * 100) / 100\n    };\n    return this._c(rgba);\n  }\n\n  /**\n   * Mix the color with pure white, from 0 to 100.\n   * Providing 0 will do nothing, providing 100 will always return white.\n   */\n  tint(amount = 10) {\n    return this.mix({\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1\n    }, amount);\n  }\n\n  /**\n   * Mix the color with pure black, from 0 to 100.\n   * Providing 0 will do nothing, providing 100 will always return black.\n   */\n  shade(amount = 10) {\n    return this.mix({\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    }, amount);\n  }\n  onBackground(background) {\n    const bg = this._c(background);\n    const alpha = this.a + bg.a * (1 - this.a);\n    const calc = key => {\n      return round((this[key] * this.a + bg[key] * bg.a * (1 - this.a)) / alpha);\n    };\n    return this._c({\n      r: calc('r'),\n      g: calc('g'),\n      b: calc('b'),\n      a: alpha\n    });\n  }\n\n  // ======================= Status =======================\n  isDark() {\n    return this.getBrightness() < 128;\n  }\n  isLight() {\n    return this.getBrightness() >= 128;\n  }\n\n  // ======================== MISC ========================\n  equals(other) {\n    return this.r === other.r && this.g === other.g && this.b === other.b && this.a === other.a;\n  }\n  clone() {\n    return this._c(this);\n  }\n\n  // ======================= Format =======================\n  toHexString() {\n    let hex = '#';\n    const rHex = (this.r || 0).toString(16);\n    hex += rHex.length === 2 ? rHex : '0' + rHex;\n    const gHex = (this.g || 0).toString(16);\n    hex += gHex.length === 2 ? gHex : '0' + gHex;\n    const bHex = (this.b || 0).toString(16);\n    hex += bHex.length === 2 ? bHex : '0' + bHex;\n    if (typeof this.a === 'number' && this.a >= 0 && this.a < 1) {\n      const aHex = round(this.a * 255).toString(16);\n      hex += aHex.length === 2 ? aHex : '0' + aHex;\n    }\n    return hex;\n  }\n\n  /** CSS support color pattern */\n  toHsl() {\n    return {\n      h: this.getHue(),\n      s: this.getSaturation(),\n      l: this.getLightness(),\n      a: this.a\n    };\n  }\n\n  /** CSS support color pattern */\n  toHslString() {\n    const h = this.getHue();\n    const s = round(this.getSaturation() * 100);\n    const l = round(this.getLightness() * 100);\n    return this.a !== 1 ? `hsla(${h},${s}%,${l}%,${this.a})` : `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /** Same as toHsb */\n  toHsv() {\n    return {\n      h: this.getHue(),\n      s: this.getSaturation(),\n      v: this.getValue(),\n      a: this.a\n    };\n  }\n  toRgb() {\n    return {\n      r: this.r,\n      g: this.g,\n      b: this.b,\n      a: this.a\n    };\n  }\n  toRgbString() {\n    return this.a !== 1 ? `rgba(${this.r},${this.g},${this.b},${this.a})` : `rgb(${this.r},${this.g},${this.b})`;\n  }\n  toString() {\n    return this.toRgbString();\n  }\n\n  // ====================== Privates ======================\n  /** Return a new FastColor object with one channel changed */\n  _sc(rgb, value, max) {\n    const clone = this.clone();\n    clone[rgb] = limitRange(value, max);\n    return clone;\n  }\n  _c(input) {\n    return new this.constructor(input);\n  }\n  getMax() {\n    if (typeof this._max === 'undefined') {\n      this._max = Math.max(this.r, this.g, this.b);\n    }\n    return this._max;\n  }\n  getMin() {\n    if (typeof this._min === 'undefined') {\n      this._min = Math.min(this.r, this.g, this.b);\n    }\n    return this._min;\n  }\n  fromHexString(trimStr) {\n    const withoutPrefix = trimStr.replace('#', '');\n    function connectNum(index1, index2) {\n      return parseInt(withoutPrefix[index1] + withoutPrefix[index2 || index1], 16);\n    }\n    if (withoutPrefix.length < 6) {\n      // #rgb or #rgba\n      this.r = connectNum(0);\n      this.g = connectNum(1);\n      this.b = connectNum(2);\n      this.a = withoutPrefix[3] ? connectNum(3) / 255 : 1;\n    } else {\n      // #rrggbb or #rrggbbaa\n      this.r = connectNum(0, 1);\n      this.g = connectNum(2, 3);\n      this.b = connectNum(4, 5);\n      this.a = withoutPrefix[6] ? connectNum(6, 7) / 255 : 1;\n    }\n  }\n  fromHsl({\n    h,\n    s,\n    l,\n    a\n  }) {\n    this._h = h % 360;\n    this._s = s;\n    this._l = l;\n    this.a = typeof a === 'number' ? a : 1;\n    if (s <= 0) {\n      const rgb = round(l * 255);\n      this.r = rgb;\n      this.g = rgb;\n      this.b = rgb;\n    }\n    let r = 0,\n      g = 0,\n      b = 0;\n    const huePrime = h / 60;\n    const chroma = (1 - Math.abs(2 * l - 1)) * s;\n    const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n    if (huePrime >= 0 && huePrime < 1) {\n      r = chroma;\n      g = secondComponent;\n    } else if (huePrime >= 1 && huePrime < 2) {\n      r = secondComponent;\n      g = chroma;\n    } else if (huePrime >= 2 && huePrime < 3) {\n      g = chroma;\n      b = secondComponent;\n    } else if (huePrime >= 3 && huePrime < 4) {\n      g = secondComponent;\n      b = chroma;\n    } else if (huePrime >= 4 && huePrime < 5) {\n      r = secondComponent;\n      b = chroma;\n    } else if (huePrime >= 5 && huePrime < 6) {\n      r = chroma;\n      b = secondComponent;\n    }\n    const lightnessModification = l - chroma / 2;\n    this.r = round((r + lightnessModification) * 255);\n    this.g = round((g + lightnessModification) * 255);\n    this.b = round((b + lightnessModification) * 255);\n  }\n  fromHsv({\n    h,\n    s,\n    v,\n    a\n  }) {\n    this._h = h % 360;\n    this._s = s;\n    this._v = v;\n    this.a = typeof a === 'number' ? a : 1;\n    const vv = round(v * 255);\n    this.r = vv;\n    this.g = vv;\n    this.b = vv;\n    if (s <= 0) {\n      return;\n    }\n    const hh = h / 60;\n    const i = Math.floor(hh);\n    const ff = hh - i;\n    const p = round(v * (1.0 - s) * 255);\n    const q = round(v * (1.0 - s * ff) * 255);\n    const t = round(v * (1.0 - s * (1.0 - ff)) * 255);\n    switch (i) {\n      case 0:\n        this.g = t;\n        this.b = p;\n        break;\n      case 1:\n        this.r = q;\n        this.b = p;\n        break;\n      case 2:\n        this.r = p;\n        this.b = t;\n        break;\n      case 3:\n        this.r = p;\n        this.g = q;\n        break;\n      case 4:\n        this.r = t;\n        this.g = p;\n        break;\n      case 5:\n      default:\n        this.g = p;\n        this.b = q;\n        break;\n    }\n  }\n  fromHsvString(trimStr) {\n    const cells = splitColorStr(trimStr, parseHSVorHSL);\n    this.fromHsv({\n      h: cells[0],\n      s: cells[1],\n      v: cells[2],\n      a: cells[3]\n    });\n  }\n  fromHslString(trimStr) {\n    const cells = splitColorStr(trimStr, parseHSVorHSL);\n    this.fromHsl({\n      h: cells[0],\n      s: cells[1],\n      l: cells[2],\n      a: cells[3]\n    });\n  }\n  fromRgbString(trimStr) {\n    const cells = splitColorStr(trimStr, (num, txt) =>\n    // Convert percentage to number. e.g. 50% -> 128\n    txt.includes('%') ? round(num / 100 * 255) : num);\n    this.r = cells[0];\n    this.g = cells[1];\n    this.b = cells[2];\n    this.a = cells[3];\n  }\n}","import type { ColorInput } from \"@ant-design/fast-color\";\r\nimport { FastColor } from \"@ant-design/fast-color\";\r\n\r\nconst hueStep = 2; // 色相阶梯\r\nconst saturationStep = 0.16; // 饱和度阶梯，浅色部分\r\nconst saturationStep2 = 0.05; // 饱和度阶梯，深色部分\r\nconst brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\r\nconst brightnessStep2 = 0.15; // 亮度阶梯，深色部分\r\nconst lightColorCount = 5; // 浅色数量，主色上\r\nconst darkColorCount = 4; // 深色数量，主色下\r\n\r\n// 暗色主题颜色映射关系表\r\nconst darkColorMap = [\r\n\t{ index: 7, amount: 15 },\r\n\t{ index: 6, amount: 25 },\r\n\t{ index: 5, amount: 30 },\r\n\t{ index: 5, amount: 45 },\r\n\t{ index: 5, amount: 65 },\r\n\t{ index: 5, amount: 85 },\r\n\t{ index: 4, amount: 90 },\r\n\t{ index: 3, amount: 95 },\r\n\t{ index: 2, amount: 97 },\r\n\t{ index: 1, amount: 98 },\r\n];\r\n\r\ninterface HsvObject {\r\n\th: number;\r\n\ts: number;\r\n\tv: number;\r\n}\r\n\r\nfunction getHue(hsv: HsvObject, i: number, light?: boolean): number {\r\n\tlet hue: number;\r\n\t// 根据色相不同，色相转向不同\r\n\tif (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\r\n\t\thue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\r\n\t} else {\r\n\t\thue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\r\n\t}\r\n\tif (hue < 0) {\r\n\t\thue += 360;\r\n\t} else if (hue >= 360) {\r\n\t\thue -= 360;\r\n\t}\r\n\treturn hue;\r\n}\r\n\r\nfunction getSaturation(hsv: HsvObject, i: number, light?: boolean): number {\r\n\t// grey color don't change saturation\r\n\tif (hsv.h === 0 && hsv.s === 0) {\r\n\t\treturn hsv.s;\r\n\t}\r\n\tlet saturation: number;\r\n\tif (light) {\r\n\t\tsaturation = hsv.s - saturationStep * i;\r\n\t} else if (i === darkColorCount) {\r\n\t\tsaturation = hsv.s + saturationStep;\r\n\t} else {\r\n\t\tsaturation = hsv.s + saturationStep2 * i;\r\n\t}\r\n\t// 边界值修正\r\n\tif (saturation > 1) {\r\n\t\tsaturation = 1;\r\n\t}\r\n\t// 第一格的 s 限制在 0.06-0.1 之间\r\n\tif (light && i === lightColorCount && saturation > 0.1) {\r\n\t\tsaturation = 0.1;\r\n\t}\r\n\tif (saturation < 0.06) {\r\n\t\tsaturation = 0.06;\r\n\t}\r\n\treturn Math.round(saturation * 100) / 100;\r\n}\r\n\r\nfunction getValue(hsv: HsvObject, i: number, light?: boolean): number {\r\n\tlet value: number;\r\n\tif (light) {\r\n\t\tvalue = hsv.v + brightnessStep1 * i;\r\n\t} else {\r\n\t\tvalue = hsv.v - brightnessStep2 * i;\r\n\t}\r\n\t// Clamp value between 0 and 1\r\n\tvalue = Math.max(0, Math.min(1, value));\r\n\treturn Math.round(value * 100) / 100;\r\n}\r\n\r\ninterface Opts {\r\n\ttheme?: \"dark\" | \"default\";\r\n\tbackgroundColor?: string;\r\n}\r\n\r\nexport function generateGradientColors(color: ColorInput, opts: Opts = {}): string[] {\r\n\tconst patterns: FastColor[] = [];\r\n\tconst pColor = new FastColor(color);\r\n\tconst hsv = pColor.toHsv();\r\n\tfor (let i = lightColorCount; i > 0; i -= 1) {\r\n\t\tconst c = new FastColor({\r\n\t\t\th: getHue(hsv, i, true),\r\n\t\t\ts: getSaturation(hsv, i, true),\r\n\t\t\tv: getValue(hsv, i, true),\r\n\t\t});\r\n\t\tpatterns.push(c);\r\n\t}\r\n\tpatterns.push(pColor);\r\n\tfor (let i = 1; i <= darkColorCount; i += 1) {\r\n\t\tconst c = new FastColor({\r\n\t\t\th: getHue(hsv, i),\r\n\t\t\ts: getSaturation(hsv, i),\r\n\t\t\tv: getValue(hsv, i),\r\n\t\t});\r\n\t\tpatterns.push(c);\r\n\t}\r\n\r\n\t// dark theme patterns\r\n\tif (opts.theme === \"dark\") {\r\n\t\treturn darkColorMap.map(({ index, amount }) =>\r\n\t\t\tnew FastColor(opts.backgroundColor || \"#141414\").mix(patterns[index], amount).toHexString(),\r\n\t\t);\r\n\t}\r\n\r\n\treturn patterns.map((c) => c.toHexString());\r\n}\r\n","// 常见颜色名称映射\r\nconst colorNames: Record<string, string> = {\r\n\tblack: \"#000000\",\r\n\twhite: \"#FFFFFF\",\r\n\tred: \"#FF0000\",\r\n\tgreen: \"#008000\",\r\n\tblue: \"#0000FF\",\r\n\tyellow: \"#FFFF00\",\r\n\tpurple: \"#800080\",\r\n\torange: \"#FFA500\",\r\n\tgray: \"#808080\",\r\n\tgrey: \"#808080\",\r\n\tpink: \"#FFC0CB\",\r\n\tbrown: \"#A52A2A\",\r\n\tcyan: \"#00FFFF\",\r\n\tmagenta: \"#FF00FF\",\r\n\tsilver: \"#C0C0C0\",\r\n\tmaroon: \"#800000\",\r\n\tolive: \"#808000\",\r\n\tlime: \"#00FF00\",\r\n\tteal: \"#008080\",\r\n\tnavy: \"#000080\",\r\n};\r\n\r\n// 完整的 toRGB 函数实现\r\nexport function toRGB(color: string): [number, number, number] | null {\r\n\tif (!color) return null;\r\n\r\n\tcolor = color.trim().toLowerCase();\r\n\r\n\t// 十六进制颜色 #RGB 或 #RRGGBB\r\n\tif (color.startsWith(\"#\")) {\r\n\t\treturn hexToRGB(color);\r\n\t}\r\n\r\n\t// rgb(r, g, b) 格式\r\n\tif (color.startsWith(\"rgb\")) {\r\n\t\treturn rgbStringToRGB(color);\r\n\t}\r\n\r\n\t// 颜色名称\r\n\tif (color in colorNames) {\r\n\t\treturn hexToRGB(colorNames[color]);\r\n\t}\r\n\treturn null;\r\n}\r\nfunction hexToRGB(hex: string): [number, number, number] | null {\r\n\thex = hex.replace(\"#\", \"\");\r\n\r\n\t// 处理缩写形式 #RGB\r\n\tif (hex.length === 3) {\r\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n\t}\r\n\r\n\tif (hex.length !== 6) return null;\r\n\r\n\tconst r = parseInt(hex.substring(0, 2), 16);\r\n\tconst g = parseInt(hex.substring(2, 4), 16);\r\n\tconst b = parseInt(hex.substring(4, 6), 16);\r\n\r\n\tif (Number.isNaN(r) || Number.isNaN(g) || Number.isNaN(b)) return null;\r\n\r\n\treturn [r, g, b];\r\n}\r\n\r\nfunction rgbStringToRGB(rgbString: string): [number, number, number] | null {\r\n\tconst match = rgbString.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)/i);\r\n\tif (!match) return null;\r\n\r\n\tconst r = parseInt(match[1], 10);\r\n\tconst g = parseInt(match[2], 10);\r\n\tconst b = parseInt(match[3], 10);\r\n\r\n\tif (Number.isNaN(r) || Number.isNaN(g) || Number.isNaN(b)) return null;\r\n\r\n\treturn [r, g, b];\r\n}\r\n","import { toRGB } from \"./toRGB\";\r\n\r\nexport function isDark(color: string): boolean {\r\n\tconst rgb = toRGB(color);\r\n\tif (!rgb) return false; // 颜色解析失败时默认返回亮色\r\n\r\n\t// 标准的相对亮度公式\r\n\tconst luminance = 0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2];\r\n\treturn luminance < 128;\r\n}\r\n","import type { ThemeOptions } from \"../types\";\r\nimport { generateGradientColors } from \"./generateGradientColors\";\r\nimport { isDark } from \"./isDark\";\r\n\r\nexport type ThemeVariantOptions = {\r\n\tprefix: string;\r\n};\r\nexport function generateGradientVars(color: string, options?: ThemeVariantOptions) {\r\n\tconst { prefix } = Object.assign({}, options) as ThemeVariantOptions;\r\n\r\n\tconst colors = generateGradientColors(color);\r\n\tif (isDark(color)) colors.reverse();\r\n\r\n\tconst vars: Record<string, string> = {};\r\n\r\n\tcolors.reduce((all, cur, i) => {\r\n\t\tvars[`${prefix}${i}`] = cur;\r\n\t\treturn all;\r\n\t}, {}) as Required<ThemeOptions>;\r\n\treturn vars;\r\n}\r\n\r\n// console.log(JSON.stringify(generateGradientVars(\"red\", { prefix: \"--t-color-theme-\" })));\r\n","export function toVarStyles(vars: Record<string, string>) {\r\n\treturn `${Object.entries(vars)\r\n\t\t.map(([key, value]) => `${key}:${value}`)\r\n\t\t.join(\";\\n\")};`;\r\n}\r\n","import { toVarStyles } from \"./toVarStyles\";\r\n\r\nexport function getVarsStyles(vars: Record<string, Record<string, string>>, selector: string, attrName: string) {\r\n\treturn Object.entries(vars)\r\n\t\t.map(([key, value]) => {\r\n\t\t\treturn `${selector}[${attrName}=${key}],[${attrName}=${key}]{\\n${toVarStyles(value)}\\n}`;\r\n\t\t})\r\n\t\t.join(\"\\n\");\r\n}\r\n","export function getId(len: number = 10) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substring(2, len + 2);\r\n}\r\n","import { getId } from \"./getId\";\r\n\r\nexport interface InjectStylesheetOptions {\r\n\tid?: string;\r\n\tlocation?: \"head\" | \"body\" | HTMLElement;\r\n\tmode?: \"replace\" | \"append\";\r\n}\r\n\r\nexport function injectStylesheet(css: string, options?: InjectStylesheetOptions) {\r\n\tif (globalThis.document === undefined) return;\r\n\tconst { id, mode, location = \"head\" } = Object.assign({ mode: \"replace\" }, options);\r\n\tlet style = document.head.querySelector(`#${id}`) as HTMLStyleElement;\r\n\tconst scopeId: string = id || getId();\r\n\tif (!style) {\r\n\t\tstyle = document.createElement(\"style\");\r\n\t\tstyle.id = scopeId;\r\n\t\tif (location === \"body\") {\r\n\t\t\tdocument.body.appendChild(style);\r\n\t\t} else if (location instanceof HTMLElement) {\r\n\t\t\tlocation.appendChild(style);\r\n\t\t} else {\r\n\t\t\tdocument.head.appendChild(style);\r\n\t\t}\r\n\t}\r\n\tif (mode === \"append\") {\r\n\t\tstyle.innerHTML += css;\r\n\t} else {\r\n\t\tstyle.innerHTML = css;\r\n\t}\r\n\treturn scopeId;\r\n}\r\n","import { toRGB } from './toRGB'\r\n\r\nexport function toRGBString(color: string): string {\r\n    const rgb = toRGB(color)\r\n    if (!rgb) return color\r\n    return `#${rgb[0].toString(16).padStart(2, '0')}${rgb[1].toString(16).padStart(2, '0')}${rgb[2].toString(16).padStart(2, '0')}`\r\n}\r\n","export const baseVars = {\r\n\t\"--t-border-radius-x-small\": \"0.2rem\",\r\n\t\"--t-border-radius-small\": \"0.3rem\",\r\n\t\"--t-border-radius-medium\": \"0.5rem\",\r\n\t\"--t-border-radius-large\": \"1rem\",\r\n\t\"--t-border-radius-x-large\": \"1.2rem\",\r\n\r\n\t\"--t-border-radius-circle\": \"50%\",\r\n\t\"--t-border-radius-pill\": \"9999px\",\r\n\r\n\t\"--t-shadow-x-small\": \"0 1px 2px hsl(240 3.8% 46.1% / 6%)\",\r\n\t\"--t-shadow-small\": \"0 1px 2px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-medium\": \"0 2px 4px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-large\": \"0 2px 8px hsl(240 3.8% 46.1% / 12%)\",\r\n\t\"--t-shadow-x-large\": \"0 4px 16px hsl(240 3.8% 46.1% / 12%)\",\r\n\r\n\t\"--t-font-size-x-small\": \"0.75rem\",\r\n\t\"--t-font-size-small\": \"0.875rem\",\r\n\t\"--t-font-size-medium\": \"1rem\",\r\n\t\"--t-font-size-large\": \"1.25rem\",\r\n\t\"--t-font-size-x-large\": \"1.5rem\",\r\n\r\n\t\"--t-font-weight-x-small\": \"100\",\r\n\t\"--t-font-weight-small\": \"200\",\r\n\t\"--t-font-weight-medium\": \"300\",\r\n\t\"--t-font-weight-large\": \"400\",\r\n\t\"--t-font-weight-x-large\": \"500\",\r\n\r\n\t/* 间距 */\r\n\t\"--t-spacing-x-small\": \"0.5rem\",\r\n\t\"--t-spacing-small\": \"0.75rem\",\r\n\t\"--t-spacing-medium\": \"1rem\",\r\n\t\"--t-spacing-large\": \"1.25rem\",\r\n\t\"--t-spacing-x-large\": \"1.75rem\",\r\n\r\n\t\"--t-letter-spacing-x-small\": \"calc(var(--t-spacing-medium) * 0.01)\",\r\n\t\"--t-letter-spacing-small\": \"calc(var(--t-spacing-medium) * 0.02)\",\r\n\t\"--t-letter-spacing-medium\": \"calc(var(--t-spacing-medium) * 0.05)\",\r\n\t\"--t-letter-spacing-large\": \"calc(var(--t-spacing-medium) * 0.1)\",\r\n\t\"--t-letter-spacing-x-large\": \"calc(var(--t-spacing-medium) * 0.1)\",\r\n\r\n\t\"--t-line-height-x-small\": \"var(--t-spacing-medium)\",\r\n\t\"--t-line-height-small\": \"calc(var(--t-spacing-medium) * 1.2)\",\r\n\t\"--t-line-height-medium\": \"calc(var(--t-spacing-medium) * 1.5)\",\r\n\t\"--t-line-height-large\": \"calc(var(--t-spacing-medium) * 1.8)\",\r\n\t\"--t-line-height-x-large\": \"calc(var(--t-spacing-medium) * 2)\",\r\n};\r\n","export const derivedVars = {\r\n\t/* 主题色 */\r\n\t\"--t-theme-color\": \"var(--t-color-theme-8)\",\r\n\t\"--t-theme-bgcolor\": \"var(--t-color-theme-0)\",\r\n\t\"--t-theme-bgcolor-1\": \"var(--t-color-theme-1)\",\r\n\t\"--t-theme-bgcolor-2\": \"var(--t-color-theme-2)\",\r\n\t\"--t-theme-bgcolor-3\": \"var(--t-color-theme-3)\",\r\n\t\"--t-theme-bgcolor-4\": \"var(--t-color-theme-4)\",\r\n\t\"--t-theme-bgcolor-5\": \"var(--t-color-theme-5)\",\r\n\t/* 主色调 */\r\n\t\"--auto-primary-color\": \"var(--t-color-primary-5)\",\r\n\t\"--auto-success-color\": \"var(--t-color-success-5)\",\r\n\t\"--auto-danger-color\": \"var(--t-color-danger-5)\",\r\n\t\"--auto-warning-color\": \"var(--t-color-warning-5)\",\r\n\t\"--auto-info-color\": \"var(--t-color-info-5)\",\r\n\t\"--auto-theme-color\": \"var(--t-color-theme-5)\",\r\n\r\n\t/* 字体颜色 */\r\n\t\"--auto-color\": \"var(--t-theme-color)\",\r\n\t\"--auto-secondary-color\": \"var(--t-color-theme-4)\",\r\n\t\"--auto-disable-color\": \"var(--t-color-theme-3)\",\r\n\t\"--auto-hover-color\": \"var(--t-color-theme-4)\",\r\n\t\"--auto-dark-color\": \"color-mix(in srgb, var(--auto-color), black 10%)\",\r\n\t\"--auto-light-color\": \"color-mix(in srgb, var(--auto-color), white 10%)\",\r\n\r\n\t/* 背景颜色: 用于面板/对话框/组件的背景 */\r\n\t\"--auto-bgcolor\": \"var(--t-theme-bgcolor)\",\r\n\t\"--auto-workspace-bgcolor\": \"var(--t-color-theme-1)\",\r\n\t/* 亮色: 相对于背景的亮色*/\r\n\t\"--auto-light-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), white 20%)\",\r\n\t/* 暗色: 相对于背景的暗色背景*/\r\n\t\"--auto-dark-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), black 10%)\",\r\n\r\n\t/** 随随色背景颜色：用于自动选中颜色，或根据背景颜色自动匹配背景颜色*/\r\n\t\"--auto-selected-bgcolor\": \"var(--t-color-theme-5)\",\r\n\t\"--auto-hover-bgcolor\": \"color-mix(in srgb, var(--t-color-theme-5), transparent 85%)\",\r\n\r\n\t/* 边框 */\r\n\t\"--auto-border\": \"1px solid var(--auto-border-color)\",\r\n\t\"--auto-border-color\": \"var(--t-color-theme-2)\",\r\n\t\"--auto-selected-border\": \"1px solid var(--t-color-theme-6)\",\r\n\t\"--auto-active-border\": \"1px solid var(--t-color-theme-6)\",\r\n\t\"--auto-disable-border\": \"1px solid var(--auto-disable-color)\",\r\n\t\"--auto-border-active-color\": \"var(--t-color-primary-3)\",\r\n\r\n\t/* 排版/字体 */\r\n\t\"--auto-font\": \"var(--auto-font-weight) var(--auto-font-size)/1.5 var(--auto-font-family)\",\r\n\t\"--auto-font-family\":\r\n\t\t\"Lantinghei SC,Microsoft Yahei,Hiragino Sans GB,Microsoft Sans Serif,WenQuanYi Micro Hei,sans-serif\",\r\n\t\"--auto-font-size\": \"var(--t-font-size-medium)\",\r\n\t\"--auto-font-weight\": \"var(--t-font-weight-medium)\",\r\n\t\"--auto-letter-spacing\": \"var(--t-letter-spacing-medium)\",\r\n\t\"--auto-line-height\": \"var(--t-line-height-medium)\",\r\n\t\"--auto-title-font\":\r\n\t\t\"calc(var(--auto-font-weight) + 200) calc(var(--auto-font-size) * 1.1)/1.5 var(--auto-font-family)\",\r\n\t/* 面板: 用于导航/标题栏/标签页标题 */\r\n\t\"--auto-panel-title-color\": \"var(--t-theme-color-6)\",\r\n\t/** 标题背景颜色：用于标题/标题栏的背景颜色*/\r\n\t\"--auto-panel-title-bgcolor\": \"color-mix(in hsl, var(--auto-bgcolor), black 5%)\",\r\n\t/* 面板背景颜色：用于面板/区块/Drawer等背景颜色*/\r\n\t\"--auto-panel-bgcolor\": \"var(--auto-light-bgcolor)\",\r\n\r\n\t/* 边框/间距 */\r\n\t\"--auto-border-radius\": \"var(--t-border-radius-medium)\",\r\n\t\"--auto-spacing\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-padding\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-margin\": \"var(--t-spacing-medium)\",\r\n\t\"--auto-shadow\": \"var(--t-shadow-medium)\",\r\n\r\n\t/* 输入框 */\r\n\t/** 输入框背景颜色：用于输入框背景颜色*/\r\n\t\"--auto-input-bgcolor\": \"var(--t-theme-bgcolor)\",\r\n\t\"--auto-input-padding\": \"calc(0.5 * var(--auto-padding))\",\r\n\t\"--auto-input-height\": \"var(--t-line-height-medium)\",\r\n\t/** 其他 */\r\n\t\"--auto-icon-size\": \"calc(1.2 * var(--t-font-size-medium))\",\r\n};\r\n","import type { ThemeSize } from \"../types\";\r\n\r\nfunction getSizeVars(size: ThemeSize) {\r\n\treturn {\r\n\t\t/** 段落与字体 */\r\n\t\t\"--auto-font-size\": `var(--t-font-size-${size})`,\r\n\t\t\"--auto-font-weight\": `var(--t-font-weight-${size})`,\r\n\t\t\"--auto-letter-spacing\": `var(--t-letter-spacing-${size})`,\r\n\t\t\"--auto-line-height\": `var(--t-line-height-${size})`,\r\n\t\t/* 用于内边距和外边距 */\r\n\t\t\"--auto-spacing\": `var(--t-spacing-${size})`,\r\n\t\t\"--auto-padding\": `var(--t-spacing-${size})`,\r\n\t\t\"--auto-margin\": `var(--t-spacing-${size})`,\r\n\r\n\t\t\"--auto-shadow\": `var(--t-shadow-${size})`,\r\n\t\t\"--auto-icon-size\": `calc(1.5 * var(--t-font-size-${size}))`,\r\n\t\t/* 输入框 */\r\n\t\t\"--auto-input-height\": `var(--t-input-height-${size})`,\r\n\t};\r\n}\r\n\r\nexport const sizeVars = {\r\n\t\"x-small\": getSizeVars(\"x-small\"),\r\n\tsmall: getSizeVars(\"small\"),\r\n\tmedium: getSizeVars(\"medium\"),\r\n\tlarge: getSizeVars(\"large\"),\r\n\t\"x-large\": getSizeVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\";\r\n\r\nfunction getRadiusVars(radius: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-border-radius\": `var(--t-border-radius-${radius})!important`,\r\n\t};\r\n}\r\n\r\nexport const radiusVars = {\r\n\t\"x-small\": getRadiusVars(\"x-small\"),\r\n\tsmall: getRadiusVars(\"small\"),\r\n\tmedium: getRadiusVars(\"medium\"),\r\n\tlarge: getRadiusVars(\"large\"),\r\n\t\"x-large\": getRadiusVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\"; \r\n\r\nfunction getSpacingVars(spacing: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-spacing\": `var(--t-spacing-${spacing}) !important`,\r\n\t\t\"--auto-padding\": `var(--t-spacing-${spacing}) !important`,\r\n\t\t\"--auto-margin\": `var(--t-spacing-${spacing}) !important`,\r\n\t};\r\n}\r\n\r\nexport const spacingVars = {\r\n\t\"x-small\": getSpacingVars(\"x-small\"),\r\n\tsmall: getSpacingVars(\"small\"),\r\n\tmedium: getSpacingVars(\"medium\"),\r\n\tlarge: getSpacingVars(\"large\"),\r\n\t\"x-large\": getSpacingVars(\"x-large\"),\r\n};\r\n","import type { ThemeSize } from \"@/types\";\r\n\r\nfunction getShadowVars(size: ThemeSize) {\r\n\treturn {\r\n\t\t\"--auto-shadow\": `var(--t-shadow-${size})!important`,\r\n\t};\r\n}\r\n\r\nexport const shadowVars = {\r\n\t\"x-small\": getShadowVars(\"x-small\"),\r\n\tsmall: getShadowVars(\"small\"),\r\n\tmedium: getShadowVars(\"medium\"),\r\n\tlarge: getShadowVars(\"large\"),\r\n\t\"x-large\": getShadowVars(\"x-large\"),\r\n};\r\n","import { AttrObserver } from './observer'\r\nimport { presetThemes } from './presets'\r\nimport type { ThemeOptions, ThemeSize } from './types'\r\nimport { generateGradientVars } from './utils/generateGradientVars'\r\nimport { getVarsStyles } from './utils/getVarsStyles'\r\nimport { injectStylesheet } from './utils/injectStylesheet'\r\nimport { isDark } from './utils/isDark'\r\nimport { toRGBString } from './utils/toRGBString'\r\nimport { toVarStyles } from './utils/toVarStyles'\r\nimport { baseVars, radiusVars, derivedVars, shadowVars, spacingVars, sizeVars } from './vars'\r\n\r\nexport class Themepro {\r\n    scope!: HTMLElement\r\n    options: Required<ThemeOptions>\r\n    attrObserver!: AttrObserver\r\n    dark: boolean = false\r\n    vars: Record<string, string> = {}\r\n    selector: string = ':host,:root'\r\n    constructor(scope?: string | HTMLElement, options?: ThemeOptions) {\r\n        this.options = Object.assign(\r\n            {\r\n                selector: ':host,:root',\r\n                theme: 'light',\r\n                size: 'medium',\r\n                radius: 'medium',\r\n                spacing: 'medium',\r\n                shadow: 'medium',\r\n                border: '1px',\r\n                primary: '#2f54eb',\r\n                success: '#22c55e',\r\n                warning: '#f59e0b',\r\n                danger: '#ef4444',\r\n                info: '#71717a',\r\n            },\r\n            options,\r\n        ) as Required<ThemeOptions>\r\n        if (typeof scope === 'string') {\r\n            window.addEventListener('DOMContentLoaded', () => {\r\n                this.scope = document.querySelector(scope) || document.documentElement\r\n                this._init()\r\n            })\r\n        } else {\r\n            this.scope = scope || document.documentElement\r\n            this._init()\r\n        }\r\n    }\r\n    private _init() {\r\n        this.attrObserver = new AttrObserver(\r\n            this.scope,\r\n            ['data-theme', 'data-primary', 'data-success', 'data-warning', 'data-danger', 'data-info'],\r\n            this._onThemeAttrsChange.bind(this),\r\n        )\r\n        this._injectBaseStyles()\r\n        this._createKeyColorStyles()\r\n        this.update()\r\n    }\r\n    get size() {\r\n        return (this.scope.dataset.size || this.options.size || 'medium') as ThemeSize\r\n    }\r\n    set size(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-size')\r\n        } else {\r\n            this.scope.dataset.size = value\r\n        }\r\n    }\r\n    get spacing(): ThemeSize {\r\n        return (this.scope.dataset.spacing || this.options.spacing || 'medium') as ThemeSize\r\n    }\r\n    set spacing(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-spacing')\r\n        } else {\r\n            this.scope.dataset.spacing = value\r\n        }\r\n    }\r\n    get shadow() {\r\n        return (this.scope.dataset.shadow || this.options.shadow || 'medium') as ThemeSize\r\n    }\r\n    set shadow(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-shadow')\r\n        } else {\r\n            this.scope.dataset.shadow = value\r\n        }\r\n    }\r\n    get radius(): ThemeSize {\r\n        return (this.scope.dataset.radius || this.options.radius || 'medium') as ThemeSize\r\n    }\r\n    set radius(value: ThemeSize) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-radius')\r\n        } else {\r\n            this.scope.dataset.radius = value\r\n        }\r\n    }\r\n    get theme(): string {\r\n        return (this.scope.dataset.theme || this.options.theme || 'light') as string\r\n    }\r\n    set theme(value: string) {\r\n        if (value === 'medium') {\r\n            this.scope.removeAttribute('data-theme')\r\n        } else {\r\n            this.scope.dataset.theme = value in presetThemes ? presetThemes[value].baseColor : toRGBString(value)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当属性变化时，更新主题\r\n     *\r\n     * @param attrName\r\n     * @param attrValue\r\n     */\r\n    private _onThemeAttrsChange(attrName: string, attrValue: string | null) {\r\n        if (attrName === 'data-theme') {\r\n            this.update({ theme: attrValue || 'light' })\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    update(options?: ThemeOptions) {\r\n        Object.assign(this.options, options)\r\n        const { theme = 'light', size, radius, spacing, shadow } = this.options\r\n        this.dark = false\r\n        if (theme in presetThemes) {\r\n            this.options.theme = presetThemes[theme].baseColor\r\n        }\r\n\r\n        this.size = size\r\n        this.radius = radius\r\n        this.spacing = spacing\r\n        this.shadow = shadow\r\n\r\n        const themeColorVars = this._createThemeColorVars()\r\n        this.dark = isDark(this.theme)\r\n        const themeName = theme\r\n        const style = `${this.selector}[data-theme='${themeName}'],[data-theme='${themeName}']{\r\n            ${`color-scheme: ${this.dark ? 'dark' : 'light'}`};\r\n            ${Object.entries(themeColorVars)\r\n                .map(([key, value]) => `${key}:${value}`)\r\n                .join(';\\n')};\r\n            }`\r\n\r\n        injectStylesheet(style, {\r\n            id: `themepro-theme`,\r\n        })\r\n    }\r\n    /**\r\n     * 获取默认主题的样式字符串\r\n     * @returns {string} 包含CSS变量和颜色模式的主题样式字符串\r\n     * @private\r\n     */\r\n    private _getDefaultThemeStyles() {\r\n        const dark = isDark(presetThemes.light.baseColor)\r\n        return `${this.selector}{\\n${`color-scheme: ${dark ? 'dark' : 'light'}`};\\n${toVarStyles(this._createThemeColorVars(presetThemes.light.baseColor))}\\n}\\n`\r\n    }\r\n    private _createThemeColorVars(theme: string = this.theme) {\r\n        const themeColor = theme in presetThemes ? presetThemes[theme].baseColor : theme\r\n        const vars: Record<string, string> = generateGradientVars(themeColor, {\r\n            prefix: '--t-color-theme-',\r\n        })\r\n        return vars\r\n    }\r\n    private _createKeyColorStyles() {\r\n        const variants = ['primary', 'success', 'warning', 'danger', 'info']\r\n        const vars: Record<string, string> = {}\r\n        variants.forEach((name) => {\r\n            // @ts-expect-error\r\n            if (this.options[name]) {\r\n                // @ts-expect-error\r\n                Object.assign(vars, generateGradientVars(this.options[name], { prefix: `--t-color-${name}-` }))\r\n            }\r\n        })\r\n        injectStylesheet(`${this.selector}{\\n${toVarStyles(vars)}}\\n}\\n`, {\r\n            id: 'themepro-keycolors',\r\n        })\r\n    }\r\n    private _injectBaseStyles() {\r\n        const baseStyles = `${this.selector}{\\n${toVarStyles(baseVars)}\\n${toVarStyles(derivedVars)}\\n}\\n`\r\n        const sizeStyles = getVarsStyles(sizeVars, this.selector, 'data-size')\r\n        const radiusStyles = getVarsStyles(radiusVars, this.selector, 'data-radius')\r\n        const spacingStyles = getVarsStyles(spacingVars, this.selector, 'data-spacing')\r\n        const shadowStyles = getVarsStyles(shadowVars, this.selector, 'data-shadow')\r\n        const lightStyles = this._getDefaultThemeStyles()\r\n        injectStylesheet(\r\n            `${baseStyles}\\n${sizeStyles}\\n${radiusStyles}\\n${spacingStyles}\\n${shadowStyles}\\n${lightStyles}`,\r\n            {\r\n                id: 'themepro-vars',\r\n            },\r\n        )\r\n    }\r\n}\r\n\r\n// 创建默认的主题应用\r\nexport const themePro = new Themepro()\r\n\r\nglobalThis.ThemePro = themePro\r\n\r\ndeclare global {\r\n    var ThemePro: typeof themePro\r\n}\r\n","import { isDark } from \"./isDark\";\r\n\r\nexport function isLight(color:string):boolean{\r\n    return isDark(color)\r\n}\r\n"],"mappings":"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","names":["matchPrefix"]}
{"version":3,"file":"index.umd.js","sources":["../src/utils/toRGB.ts","../src/utils/isDark.ts","../src/utils/rgbToHsl.ts","../src/utils/hslToRgb.ts","../src/utils/generateGradientColors.ts","../src/utils/createVariantVars.ts","../src/utils/getId.ts","../src/utils/injectStylesheet.ts","../src/utils/createTheme.ts","../src/themepro.ts"],"sourcesContent":["export function toRGB(hexColor: string): [number, number, number] {\r\n    let str = hexColor.trim();\r\n\r\n    // 去掉可选的 #\r\n    if (str.startsWith('#')) str = str.slice(1);\r\n\r\n    // 3 位 → 6 位\r\n    if (str.length === 3) {\r\n        str = str.replace(/(.)/g, '$1$1');\r\n    }\r\n    // 4 位 → 8 位\r\n    else if (str.length === 4) {\r\n        str = str.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    // 去掉末尾的 alpha（8 位 → 6 位）\r\n    if (str.length > 6) {\r\n        str = str.slice(0, 6);\r\n    }\r\n\r\n    // 必须是 6 位十六进制\r\n    if (!/^[0-9a-f]{6}$/i.test(str)) {\r\n        throw new Error('Invalid hex color');\r\n    }\r\n\r\n    const bigint = parseInt(str, 16);\r\n    const r = (bigint >> 16) & 255;\r\n    const g = (bigint >> 8) & 255;\r\n    const b = bigint & 255;\r\n\r\n    return [r, g, b];\r\n}","import { toRGB } from \"./toRGB\";\r\n\r\n \r\nexport function isDark(color:string):boolean{\r\n    const rgb = toRGB(color);\r\n    const yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\r\n    return yiq < 128;\r\n}\r\n","import { toRGB } from \"./toRGB\";\r\n\r\n   /**\r\n * RGB → HSL\r\n * @param rgb [R, G, B]，取值 0-255 的整数\r\n * @returns   [H, S, L]，H 为 0-360，S/L 为 0-100\r\n */\r\nexport function rgbToHsl(color: string | [number, number, number]): [number, number, number] {\r\n    const [r, g, b] = Array.isArray(color) ? color : toRGB(color);\r\n    // 1. 归一化到 [0,1]\r\n    const rd = r / 255;\r\n    const gd = g / 255;\r\n    const bd = b / 255;\r\n\r\n    const max = Math.max(rd, gd, bd);\r\n    const min = Math.min(rd, gd, bd);\r\n    const delta = max - min;\r\n\r\n    let h = 0;\r\n    let s = 0;\r\n    const l = (max + min) / 2;\r\n\r\n    // 2. 计算色相 H\r\n    if (delta !== 0) {\r\n        if (max === rd) {\r\n            h = ((gd - bd) / delta + (gd < bd ? 6 : 0)) / 6;\r\n        } else if (max === gd) {\r\n            h = ((bd - rd) / delta + 2) / 6;\r\n        } else {\r\n            h = ((rd - gd) / delta + 4) / 6;\r\n        }\r\n    }\r\n\r\n    // 3. 计算饱和度 S\r\n    if (delta !== 0) {\r\n        s = delta / (1 - Math.abs(2 * l - 1));\r\n    }\r\n\r\n    // 4. 结果映射\r\n    return [\r\n        Math.round(h * 360),         // 0-360\r\n        Math.round(s * 100),         // 0-100\r\n        Math.round(l * 100)          // 0-100\r\n    ];\r\n}\r\n \r\n\r\n// /* === 简单测试 === */\r\n// console.log(rgbToHsl([255, 0, 0]));    // [0, 100, 50]   纯红\r\n// console.log(rgbToHsl([128, 128, 128])); // [0, 0, 50]     中灰\r\n// console.log(rgbToHsl([0, 255, 255]));   // [180, 100, 50] 青色  ","/**\r\n * 将 HSL 颜色转换为十六进制字符串\r\n * @param hsl [H, S, L]\r\n *   - H ∈ [0, 360]（色相）\r\n *   - S ∈ [0, 100]（饱和度 %）\r\n *   - L ∈ [0, 100]（亮度 %）\r\n * @returns 十六进制颜色字符串，例如 \"#1298ab\"\r\n */\r\nexport function hslToRgb(hsl: [number, number, number]): string {\r\n  const [h, s, l] = hsl;\r\n\r\n  // 归一化\r\n  const H = h / 360;\r\n  const S = s / 100;\r\n  const L = l / 100;\r\n\r\n  const C = (1 - Math.abs(2 * L - 1)) * S;\r\n  const X = C * (1 - Math.abs(((H * 6) % 2) - 1));\r\n  const m = L - C / 2;\r\n\r\n  let r = 0, g = 0, b = 0;\r\n\r\n  if (0 <= H && H < 1 / 6)       { r = C; g = X; b = 0; }\r\n  else if (1 / 6 <= H && H < 2 / 6) { r = X; g = C; b = 0; }\r\n  else if (2 / 6 <= H && H < 3 / 6) { r = 0; g = C; b = X; }\r\n  else if (3 / 6 <= H && H < 4 / 6) { r = 0; g = X; b = C; }\r\n  else if (4 / 6 <= H && H < 5 / 6) { r = X; g = 0; b = C; }\r\n  else                              { r = C; g = 0; b = X; }\r\n\r\n  // 转 0-255 并补零到两位\r\n  const toHex = (v: number) =>\r\n    Math.round((v + m) * 255)\r\n      .toString(16)\r\n      .padStart(2, '0');\r\n\r\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\r\n\r\n// /* === 测试 === */\r\n// console.log(hslToRgb([0, 100, 50]));   // \"#ff0000\"\r\n// console.log(hslToRgb([120, 100, 50])); // \"#00ff00\"\r\n// console.log(hslToRgb([210, 50, 60]));  // \"#6099cc\"","/**\r\n *\r\n *\r\n * 输入一个基础颜色，\r\n *\r\n * 根据访颜色是暗色或者亮色生成梯度颜色\r\n *\r\n * - 基础颜色位于中间\r\n * - 如果基础颜色是亮色，梯度是从亮到暗\r\n * - 如果基础颜色是暗色，梯度是从暗到亮\r\n * - 生成梯度颜色时，最亮颜色为偏移值0.5，最暗颜色偏移值-0.5\r\n *\r\n *\r\n * @param base\r\n *\r\n *\r\n *\r\n */\r\nimport { isDark } from \"./isDark\";\r\nimport { rgbToHsl } from \"./rgbToHsl\";\r\nimport { hslToRgb } from \"./hslToRgb\";\r\n\r\nexport type GenerateGradientOptions = {\r\n\tcolor: string;\r\n\trange?: [number, number]; // 根据亮度范围\r\n\tdark?: boolean;\r\n\tcount?: number; // 生成颜色数，默认是5,所以生成的颜色是11，包含基础颜色在内，最暗和最亮颜色位于两边\r\n};\r\nexport function generateGradientColors(options?: GenerateGradientOptions): { colors: string[]; dark: boolean } {\r\n\tconst { color, range, dark, count } = Object.assign(\r\n\t\t{\r\n\t\t\trange: [5, 98],\r\n\t\t\tcount: 5,\r\n\t\t},\r\n\t\toptions,\r\n\t);\r\n\r\n\t// 创建颜色对象\r\n\tconst baseHsl = rgbToHsl(color);\r\n\r\n\t// 判断基础颜色是暗色还是亮色\r\n\tconst isDarkColor = dark ?? isDark(color);\r\n\r\n\t// 生成11个梯度颜色\r\n\tconst colors: string[] = Array.from({ length: 2 * count + 1 });\r\n\tcolors[count] = color;\r\n\r\n\tlet lightnessRange = Math.abs(baseHsl[2] - range[0]);\r\n\tlet step = lightnessRange / count;\r\n\r\n\tlet lightness = baseHsl[2];\r\n\tfor (let i = count - 1; i >= 0; i--) {\r\n\t\tlightness = lightness + (isDarkColor ? -1 : 1) * step;\r\n\t\tif (lightness < 0) lightness = 0;\r\n\t\tif (lightness > 100) lightness = 100;\r\n\t\tcolors[i] = hslToRgb([baseHsl[0], baseHsl[1], lightness]);\r\n\t}\r\n\tlightness = baseHsl[2];\r\n\tlightnessRange = Math.abs(baseHsl[2] - range[1]);\r\n\tstep = lightnessRange / count;\r\n\tfor (let i = count + 1; i < count * 2 + 1; i++) {\r\n\t\tlightness = lightness + (isDarkColor ? 1 : -1) * step;\r\n\t\tif (lightness < 0) lightness = 0;\r\n\t\tif (lightness > 100) lightness = 100;\r\n\t\tcolors[i] = hslToRgb([baseHsl[0], baseHsl[1], lightness]);\r\n\t}\r\n\treturn { colors, dark: isDarkColor };\r\n}\r\n\r\n// console.log(`.a{\\n${generateGradientColors(\"#ff0000\").colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n// console.log(`.a{\\n${generateGradientColors(\"#00ff00\").colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n// console.log(`.a{\\n${generateGradientColors(\"#0000ff\",{range:[20,80]}).colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n","import type { ThemeOptions, ThemeVariantOptions } from \"../types\";\r\nimport { generateGradientColors } from \"./generateGradientColors\";\r\n\r\nexport function createVariantVars(prefix: string, options: string | ThemeVariantOptions) {\r\n\tconst opts = Object.assign(\r\n\t\t{\r\n\t\t\tlevels: [5, 1, 2, 3, 4, 5],\r\n\t\t\trange: [10, 98],\r\n\t\t\tcount: 5,\r\n\t\t},\r\n\t\ttypeof options === \"string\" ? { color: options } : options,\r\n\t) as ThemeVariantOptions;\r\n\r\n\tconst { colors, dark } = generateGradientColors(opts);\r\n\r\n\tconst vars: Record<string, string> = {};\r\n\tcolors.reduce((all, cur, i) => {\r\n\t\tvars[`${prefix}${i}`] = cur;\r\n\t\treturn all;\r\n\t}, {}) as Required<ThemeOptions>;\r\n\r\n\tconst ps = prefix.split(\"-\");\r\n\tconst levelPrefix: string = `--t-${ps[4]}`;\r\n\r\n\tif (opts.levels) {\r\n\t\tvars[`${levelPrefix}-color`] = `var(${prefix}${opts.levels[0]})`;\r\n\t\tvars[`${levelPrefix}-bgcolor`] = `var(${prefix}${opts.levels[1]})`;\r\n\t\topts.levels.slice(2).forEach((level, i) => {\r\n\t\t\tvars[`${levelPrefix}-bgcolor-${i + 1}`] = `var(${prefix}${level})`;\r\n\t\t});\r\n\t}\r\n\treturn { vars, colors, dark };\r\n}\r\n","export function getId(len: number = 10) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substring(2, len + 2);\r\n}\r\n","import { getId } from \"./getId\";\r\n\r\nexport interface InjectStylesheetOptions {\r\n  location?: \"head\" | \"body\";\r\n  id?: string;\r\n  // 默认仅当指定id的样式不存在时注入\r\n  mode?: \"replace\" | \"append\" | 'default'\r\n  // 当指定时，将在该元素下注入样式\r\n  el?: HTMLElement;\r\n}\r\n\r\nexport function injectStylesheet(css: string,options?: InjectStylesheetOptions) {\r\n  if (globalThis.document == undefined) return;\r\n  const {id, mode, location = \"head\" } = Object.assign({ mode: \"default\" }, options);\r\n  let style = document.head.querySelector(`#${id}`) as HTMLStyleElement;\r\n  let scopeId: string = id || getId();\r\n  if (!style) {\r\n    style = document.createElement(\"style\");\r\n    style.innerHTML = css;\r\n    style.id = scopeId;\r\n    if (options?.el) { \r\n      options.el.appendChild(style);\r\n    } else if (location == \"head\") {\r\n      document.head.appendChild(style);\r\n    } else {\r\n      document.body.appendChild(style);\r\n    }\r\n    return style;\r\n  }\r\n  if (mode == \"replace\") {\r\n    style.innerHTML = css;\r\n  } else if(mode == \"append\"){\r\n    style.innerHTML += css;\r\n  }\r\n  return scopeId;\r\n}\r\n","import type { ThemeOptions } from \"../types\";\r\nimport { createVariantVars } from \"./createVariantVars\";\r\nimport { getId } from \"./getId\";\r\nimport { injectStylesheet } from \"./injectStylesheet\";\r\n\r\nexport function createTheme(options: ThemeOptions) {\r\n    const opts = Object.assign(\r\n        {\r\n            name: getId(),\r\n            variants: {},\r\n        },\r\n        options\r\n    ) as Required<ThemeOptions>;\r\n\r\n    const themeOpts = Object.assign(\r\n        {\r\n            prefix: \"--t-color-theme-\",\r\n            range: [10, 100],\r\n            levels: [10, 1, 2, 3, 4, 5],\r\n        },\r\n        typeof opts.theme === \"string\" ? { color: opts.theme } : opts.theme\r\n    );\r\n\r\n    const selector = opts.selector || `:root,:host`;\r\n\r\n    const { vars, dark } = createVariantVars(\"--t-color-theme-\", themeOpts);\r\n\r\n    if (opts.variants.primary)\r\n        createVariantVars(\"--t-color-primary-\", opts.variants.primary);\r\n    if (opts.variants.danger)\r\n        createVariantVars(\"--t-color-danger-\", opts.variants.danger);\r\n    if (opts.variants.success)\r\n        createVariantVars(\"--t-color-success-\", opts.variants.success);\r\n    if (opts.variants.warning)\r\n        createVariantVars(\"--t-color-warning-\", opts.variants.warning);\r\n    if (opts.variants.info)\r\n        createVariantVars(\"--t-color-info-\", opts.variants.info);\r\n\r\n    const style = `${selector}[data-theme=${opts.name}]{\r\n        ${`color-schema: ${dark ? \"dark\" : \"light\"}`};\r\n        ${Object.entries(vars)\r\n            .map(([key, value]) => `${key}:${value}`)\r\n            .join(\";\\n\")}}`;\r\n\r\n    injectStylesheet(style, {\r\n        id: `theme-${opts.name || getId()}`,\r\n        mode: \"replace\",\r\n    });\r\n    return style;\r\n}\r\n","import type { ThemeOptions, ThemeSize, ThemeVariantType } from \"./types\";\r\nimport { createTheme } from \"./utils/createTheme\";\r\nimport { createVariantVars } from \"./utils/createVariantVars\";\r\nimport type { GenerateGradientOptions } from \"./utils/generateGradientColors\";\r\nimport { injectStylesheet } from \"./utils/injectStylesheet\";\r\n\r\nexport class Themepro {\r\n\troot!: HTMLElement;\r\n\tconstructor() {\r\n\t\tthis.root = document.documentElement;\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", this._onDomContentLoaded.bind(this));\r\n\t}\r\n\tget size() {\r\n\t\treturn (this.root.dataset.size || \"medium\") as ThemeSize;\r\n\t}\r\n\tset size(value: ThemeSize) {\r\n\t\tthis.root.dataset.size = value;\r\n\t}\r\n\tget spacing(): ThemeSize {\r\n\t\treturn (this.root.dataset.spacing || \"medium\") as ThemeSize;\r\n\t}\r\n\tset spacing(value: ThemeSize | \"auto\") {\r\n\t\tthis.root.dataset.spacing = String(value);\r\n\t}\r\n\tget radius(): string {\r\n\t\treturn this.root.dataset.radius || \"medium\";\r\n\t}\r\n\tset radius(value: string) {\r\n\t\tthis.root.dataset.radius = value;\r\n\t}\r\n\tget theme(): string {\r\n\t\treturn this.root.dataset.theme || \"light\";\r\n\t}\r\n\tset theme(value: string) {\r\n\t\tthis.root.dataset.theme = value;\r\n\t}\r\n\t_onDomContentLoaded() {\r\n\t\tthis.root = document.documentElement;\r\n\t}\r\n\r\n\tcreateVariant(variant: ThemeVariantType, options: GenerateGradientOptions) {\r\n\t\tconst { vars } = createVariantVars(`--t-color-${variant}-`, options);\r\n\t\tconst selector = this.theme === \"light\" ? `:root,:host` : `:host,\\n:root[data-theme=${this.theme}]`;\r\n\t\tconst styles = `${selector}{${Object.entries(vars)\r\n\t\t\t.map(([name, value]) => `${name}: ${value};`)\r\n\t\t\t.join(\"\\n\")}`;\r\n\r\n\t\tinjectStylesheet(styles, {\r\n\t\t\tid: `t-${this.theme}-${variant}`,\r\n\t\t\tmode: \"replace\",\r\n\t\t});\r\n\t}\r\n\r\n\tcreate(options: ThemeOptions) {\r\n\t\tcreateTheme(options);\r\n\t}\r\n}\r\n\r\n// 创建默认的主题应用\r\nexport const themePro = new Themepro();\r\n\r\nglobalThis.ThemePro = themePro;\r\n\r\ndeclare global {\r\n\tvar ThemePro: typeof themePro;\r\n}\r\n"],"names":["toRGB","hexColor","str","bigint","r","g","b","isDark","color","rgb","rgbToHsl","rd","gd","bd","max","min","delta","h","s","l","hslToRgb","hsl","H","S","L","C","X","m","toHex","v","generateGradientColors","options","range","dark","count","baseHsl","isDarkColor","colors","lightnessRange","step","lightness","i","createVariantVars","prefix","opts","vars","all","cur","levelPrefix","level","getId","len","injectStylesheet","css","id","mode","location","style","scopeId","createTheme","themeOpts","selector","key","value","Themepro","variant","styles","name","themePro"],"mappings":"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"}
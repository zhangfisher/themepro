{"version":3,"file":"index.js","sources":["../src/utils/toRGB.ts","../src/utils/isDark.ts","../src/utils/rgbToHsl.ts","../src/utils/hslToRgb.ts","../src/utils/generateGradientColors.ts","../src/utils/createVariantVars.ts","../src/utils/getId.ts","../src/utils/injectStylesheet.ts","../src/utils/createTheme.ts","../src/themepro.ts"],"sourcesContent":["export function toRGB(hexColor: string): [number, number, number] {\r\n    let str = hexColor.trim();\r\n\r\n    // 去掉可选的 #\r\n    if (str.startsWith('#')) str = str.slice(1);\r\n\r\n    // 3 位 → 6 位\r\n    if (str.length === 3) {\r\n        str = str.replace(/(.)/g, '$1$1');\r\n    }\r\n    // 4 位 → 8 位\r\n    else if (str.length === 4) {\r\n        str = str.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    // 去掉末尾的 alpha（8 位 → 6 位）\r\n    if (str.length > 6) {\r\n        str = str.slice(0, 6);\r\n    }\r\n\r\n    // 必须是 6 位十六进制\r\n    if (!/^[0-9a-f]{6}$/i.test(str)) {\r\n        throw new Error('Invalid hex color');\r\n    }\r\n\r\n    const bigint = parseInt(str, 16);\r\n    const r = (bigint >> 16) & 255;\r\n    const g = (bigint >> 8) & 255;\r\n    const b = bigint & 255;\r\n\r\n    return [r, g, b];\r\n}","import { toRGB } from \"./toRGB\";\r\n\r\n \r\nexport function isDark(color:string):boolean{\r\n    const rgb = toRGB(color);\r\n    const yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\r\n    return yiq < 128;\r\n}\r\n","import { toRGB } from \"./toRGB\";\r\n\r\n   /**\r\n * RGB → HSL\r\n * @param rgb [R, G, B]，取值 0-255 的整数\r\n * @returns   [H, S, L]，H 为 0-360，S/L 为 0-100\r\n */\r\nexport function rgbToHsl(color: string | [number, number, number]): [number, number, number] {\r\n    const [r, g, b] = Array.isArray(color) ? color : toRGB(color);\r\n    // 1. 归一化到 [0,1]\r\n    const rd = r / 255;\r\n    const gd = g / 255;\r\n    const bd = b / 255;\r\n\r\n    const max = Math.max(rd, gd, bd);\r\n    const min = Math.min(rd, gd, bd);\r\n    const delta = max - min;\r\n\r\n    let h = 0;\r\n    let s = 0;\r\n    const l = (max + min) / 2;\r\n\r\n    // 2. 计算色相 H\r\n    if (delta !== 0) {\r\n        if (max === rd) {\r\n            h = ((gd - bd) / delta + (gd < bd ? 6 : 0)) / 6;\r\n        } else if (max === gd) {\r\n            h = ((bd - rd) / delta + 2) / 6;\r\n        } else {\r\n            h = ((rd - gd) / delta + 4) / 6;\r\n        }\r\n    }\r\n\r\n    // 3. 计算饱和度 S\r\n    if (delta !== 0) {\r\n        s = delta / (1 - Math.abs(2 * l - 1));\r\n    }\r\n\r\n    // 4. 结果映射\r\n    return [\r\n        Math.round(h * 360),         // 0-360\r\n        Math.round(s * 100),         // 0-100\r\n        Math.round(l * 100)          // 0-100\r\n    ];\r\n}\r\n \r\n\r\n// /* === 简单测试 === */\r\n// console.log(rgbToHsl([255, 0, 0]));    // [0, 100, 50]   纯红\r\n// console.log(rgbToHsl([128, 128, 128])); // [0, 0, 50]     中灰\r\n// console.log(rgbToHsl([0, 255, 255]));   // [180, 100, 50] 青色  ","/**\r\n * 将 HSL 颜色转换为十六进制字符串\r\n * @param hsl [H, S, L]\r\n *   - H ∈ [0, 360]（色相）\r\n *   - S ∈ [0, 100]（饱和度 %）\r\n *   - L ∈ [0, 100]（亮度 %）\r\n * @returns 十六进制颜色字符串，例如 \"#1298ab\"\r\n */\r\nexport function hslToRgb(hsl: [number, number, number]): string {\r\n  const [h, s, l] = hsl;\r\n\r\n  // 归一化\r\n  const H = h / 360;\r\n  const S = s / 100;\r\n  const L = l / 100;\r\n\r\n  const C = (1 - Math.abs(2 * L - 1)) * S;\r\n  const X = C * (1 - Math.abs(((H * 6) % 2) - 1));\r\n  const m = L - C / 2;\r\n\r\n  let r = 0, g = 0, b = 0;\r\n\r\n  if (0 <= H && H < 1 / 6)       { r = C; g = X; b = 0; }\r\n  else if (1 / 6 <= H && H < 2 / 6) { r = X; g = C; b = 0; }\r\n  else if (2 / 6 <= H && H < 3 / 6) { r = 0; g = C; b = X; }\r\n  else if (3 / 6 <= H && H < 4 / 6) { r = 0; g = X; b = C; }\r\n  else if (4 / 6 <= H && H < 5 / 6) { r = X; g = 0; b = C; }\r\n  else                              { r = C; g = 0; b = X; }\r\n\r\n  // 转 0-255 并补零到两位\r\n  const toHex = (v: number) =>\r\n    Math.round((v + m) * 255)\r\n      .toString(16)\r\n      .padStart(2, '0');\r\n\r\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\r\n\r\n// /* === 测试 === */\r\n// console.log(hslToRgb([0, 100, 50]));   // \"#ff0000\"\r\n// console.log(hslToRgb([120, 100, 50])); // \"#00ff00\"\r\n// console.log(hslToRgb([210, 50, 60]));  // \"#6099cc\"","/**\r\n *\r\n *\r\n * 输入一个基础颜色，\r\n *\r\n * 根据访颜色是暗色或者亮色生成梯度颜色\r\n *\r\n * - 基础颜色位于中间\r\n * - 如果基础颜色是亮色，梯度是从亮到暗\r\n * - 如果基础颜色是暗色，梯度是从暗到亮\r\n * - 生成梯度颜色时，最亮颜色为偏移值0.5，最暗颜色偏移值-0.5\r\n *\r\n *\r\n * @param base\r\n *\r\n *\r\n *\r\n */\r\nimport { isDark } from \"./isDark\";\r\nimport { rgbToHsl } from \"./rgbToHsl\";\r\nimport { hslToRgb } from \"./hslToRgb\";\r\n\r\nexport type GenerateGradientOptions = {\r\n\tcolor: string;\r\n\trange?: [number, number]; // 根据亮度范围\r\n\tdark?: boolean;\r\n\tcount?: number; // 生成颜色数，默认是5,所以生成的颜色是11，包含基础颜色在内，最暗和最亮颜色位于两边\r\n};\r\nexport function generateGradientColors(options?: GenerateGradientOptions): { colors: string[]; dark: boolean } {\r\n\tconst { color, range, dark, count } = Object.assign(\r\n\t\t{\r\n\t\t\trange: [5, 98],\r\n\t\t\tcount: 5,\r\n\t\t},\r\n\t\toptions,\r\n\t);\r\n\r\n\t// 创建颜色对象\r\n\tconst baseHsl = rgbToHsl(color);\r\n\r\n\t// 判断基础颜色是暗色还是亮色\r\n\tconst isDarkColor = dark ?? isDark(color);\r\n\r\n\t// 生成11个梯度颜色\r\n\tconst colors: string[] = Array.from({ length: 2 * count + 1 });\r\n\tcolors[count] = color;\r\n\r\n\tlet lightnessRange = Math.abs(baseHsl[2] - range[0]);\r\n\tlet step = lightnessRange / count;\r\n\r\n\tlet lightness = baseHsl[2];\r\n\tfor (let i = count - 1; i >= 0; i--) {\r\n\t\tlightness = lightness + (isDarkColor ? -1 : 1) * step;\r\n\t\tif (lightness < 0) lightness = 0;\r\n\t\tif (lightness > 100) lightness = 100;\r\n\t\tcolors[i] = hslToRgb([baseHsl[0], baseHsl[1], lightness]);\r\n\t}\r\n\tlightness = baseHsl[2];\r\n\tlightnessRange = Math.abs(baseHsl[2] - range[1]);\r\n\tstep = lightnessRange / count;\r\n\tfor (let i = count + 1; i < count * 2 + 1; i++) {\r\n\t\tlightness = lightness + (isDarkColor ? 1 : -1) * step;\r\n\t\tif (lightness < 0) lightness = 0;\r\n\t\tif (lightness > 100) lightness = 100;\r\n\t\tcolors[i] = hslToRgb([baseHsl[0], baseHsl[1], lightness]);\r\n\t}\r\n\treturn { colors, dark: isDarkColor };\r\n}\r\n\r\n// console.log(`.a{\\n${generateGradientColors(\"#ff0000\").colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n// console.log(`.a{\\n${generateGradientColors(\"#00ff00\").colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n// console.log(`.a{\\n${generateGradientColors(\"#0000ff\",{range:[20,80]}).colors.map(color=>\"color:\"+color).join(';\\n')}}`)\r\n","import type { ThemeOptions, ThemeVariantOptions } from \"../types\";\r\nimport { generateGradientColors } from \"./generateGradientColors\";\r\n\r\nexport function createVariantVars(prefix: string, options: string | ThemeVariantOptions) {\r\n\tconst opts = Object.assign(\r\n\t\t{\r\n\t\t\tlevels: [5, 1, 2, 3, 4, 5],\r\n\t\t\trange: [10, 98],\r\n\t\t\tcount: 5,\r\n\t\t},\r\n\t\ttypeof options === \"string\" ? { color: options } : options,\r\n\t) as ThemeVariantOptions;\r\n\r\n\tconst { colors, dark } = generateGradientColors(opts);\r\n\r\n\tconst vars: Record<string, string> = {};\r\n\tcolors.reduce((all, cur, i) => {\r\n\t\tvars[`${prefix}${i}`] = cur;\r\n\t\treturn all;\r\n\t}, {}) as Required<ThemeOptions>;\r\n\r\n\tconst ps = prefix.split(\"-\");\r\n\tconst levelPrefix: string = `--t-${ps[4]}`;\r\n\r\n\tif (opts.levels) {\r\n\t\tvars[`${levelPrefix}-color`] = `var(${prefix}${opts.levels[0]})`;\r\n\t\tvars[`${levelPrefix}-bgcolor`] = `var(${prefix}${opts.levels[1]})`;\r\n\t\topts.levels.slice(2).forEach((level, i) => {\r\n\t\t\tvars[`${levelPrefix}-bgcolor-${i + 1}`] = `var(${prefix}${level})`;\r\n\t\t});\r\n\t}\r\n\treturn { vars, colors, dark };\r\n}\r\n","export function getId(len: number = 10) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substring(2, len + 2);\r\n}\r\n","import { getId } from \"./getId\";\r\n\r\nexport interface InjectStylesheetOptions {\r\n  location?: \"head\" | \"body\";\r\n  id?: string;\r\n  // 默认仅当指定id的样式不存在时注入\r\n  mode?: \"replace\" | \"append\" | 'default'\r\n  // 当指定时，将在该元素下注入样式\r\n  el?: HTMLElement;\r\n}\r\n\r\nexport function injectStylesheet(css: string,options?: InjectStylesheetOptions) {\r\n  if (globalThis.document == undefined) return;\r\n  const {id, mode, location = \"head\" } = Object.assign({ mode: \"default\" }, options);\r\n  let style = document.head.querySelector(`#${id}`) as HTMLStyleElement;\r\n  let scopeId: string = id || getId();\r\n  if (!style) {\r\n    style = document.createElement(\"style\");\r\n    style.innerHTML = css;\r\n    style.id = scopeId;\r\n    if (options?.el) { \r\n      options.el.appendChild(style);\r\n    } else if (location == \"head\") {\r\n      document.head.appendChild(style);\r\n    } else {\r\n      document.body.appendChild(style);\r\n    }\r\n    return style;\r\n  }\r\n  if (mode == \"replace\") {\r\n    style.innerHTML = css;\r\n  } else if(mode == \"append\"){\r\n    style.innerHTML += css;\r\n  }\r\n  return scopeId;\r\n}\r\n","import type { ThemeOptions } from \"../types\";\r\nimport { createVariantVars } from \"./createVariantVars\";\r\nimport { getId } from \"./getId\";\r\nimport { injectStylesheet } from \"./injectStylesheet\";\r\n\r\nexport function createTheme(options: ThemeOptions) {\r\n\tconst opts = Object.assign(\r\n\t\t{\r\n\t\t\tname: getId(),\r\n\t\t\tvariants: {},\r\n\t\t},\r\n\t\toptions,\r\n\t) as Required<ThemeOptions>;\r\n\r\n\tconst themeOpts = Object.assign(\r\n\t\t{\r\n\t\t\tprefix: \"--t-color-theme-\",\r\n\t\t\trange: [10, 100],\r\n\t\t\tlevels: [10, 1, 2, 3, 4, 5],\r\n\t\t},\r\n\t\ttypeof opts.theme === \"string\" ? { color: opts.theme } : opts.theme,\r\n\t);\r\n\r\n\tconst { vars, dark } = createVariantVars(\"--t-color-theme-\", themeOpts);\r\n\r\n\tif (opts.variants.primary) createVariantVars(\"--t-color-primary-\", opts.variants.primary);\r\n\tif (opts.variants.danger) createVariantVars(\"--t-color-danger-\", opts.variants.danger);\r\n\tif (opts.variants.success) createVariantVars(\"--t-color-success-\", opts.variants.success);\r\n\tif (opts.variants.warning) createVariantVars(\"--t-color-warning-\", opts.variants.warning);\r\n\tif (opts.variants.info) createVariantVars(\"--t-color-info-\", opts.variants.info);\r\n\r\n\tinjectStylesheet(\r\n\t\t`:host,:root[data-theme=${opts.name}]{\r\n        ${`color-schema: ${dark ? \"dark\" : \"light\"}`}\r\n        ${Object.entries(vars)\r\n\t\t\t.map(([key, value]) => `${key}:${value}`)\r\n\t\t\t.join(\";\\n\")}}`,\r\n\t\t{\r\n\t\t\tid: `theme-${opts.name || getId()}`,\r\n\t\t\tmode: \"replace\",\r\n\t\t},\r\n\t);\r\n}\r\n","import type { ThemeOptions, ThemeSize, ThemeVariantType } from \"./types\";\r\nimport { createTheme } from \"./utils/createTheme\";\r\nimport { createVariantVars } from \"./utils/createVariantVars\";\r\nimport type { GenerateGradientOptions } from \"./utils/generateGradientColors\";\r\nimport { injectStylesheet } from \"./utils/injectStylesheet\";\r\n\r\nexport class Themepro {\r\n\troot!: HTMLElement;\r\n\tconstructor() {\r\n\t\tthis.root = document.documentElement;\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", this._onDomContentLoaded.bind(this));\r\n\t}\r\n\tget size() {\r\n\t\treturn (this.root.dataset.size || \"medium\") as ThemeSize;\r\n\t}\r\n\tset size(value: ThemeSize) {\r\n\t\tthis.root.dataset.size = value;\r\n\t}\r\n\tget spacing(): ThemeSize | \"auto\" {\r\n\t\treturn (this.root.dataset.spacing || \"medium\") as ThemeSize | \"auto\";\r\n\t}\r\n\tset spacing(value: ThemeSize | \"auto\") {\r\n\t\tthis.root.dataset.spacing = String(value);\r\n\t}\r\n\tget radius(): string {\r\n\t\treturn this.root.dataset.radius || \"medium\";\r\n\t}\r\n\tset radius(value: string) {\r\n\t\tthis.root.dataset.radius = value;\r\n\t}\r\n\tget theme(): string {\r\n\t\treturn this.root.dataset.theme || \"light\";\r\n\t}\r\n\tset theme(value: string) {\r\n\t\tthis.root.dataset.theme = value;\r\n\t}\r\n\t_onDomContentLoaded() {\r\n\t\tthis.root = document.documentElement;\r\n\t}\r\n\r\n\tcreateVariant(variant: ThemeVariantType, options: GenerateGradientOptions) {\r\n\t\tconst { vars } = createVariantVars(`--t-color-${variant}-`, options);\r\n\t\tconst selector = this.theme === \"light\" ? `:root,:host` : `:host,\\n:root[data-theme=${this.theme}]`;\r\n\t\tconst styles = `${selector}{${Object.entries(vars)\r\n\t\t\t.map(([name, value]) => `${name}: ${value};`)\r\n\t\t\t.join(\"\\n\")}`;\r\n\r\n\t\tinjectStylesheet(styles, {\r\n\t\t\tid: `t-${this.theme}-${variant}`,\r\n\t\t\tmode: \"replace\",\r\n\t\t});\r\n\t}\r\n\r\n\tcreateTheme(options: ThemeOptions) {\r\n\t\tcreateTheme(options);\r\n\t}\r\n}\r\n\r\n// 创建默认的主题应用\r\nexport const themePro = new Themepro();\r\n\r\nglobalThis.ThemePro = themePro;\r\n\r\ndeclare global {\r\n\tvar ThemePro: typeof themePro;\r\n}\r\n"],"names":[],"mappings":"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"}